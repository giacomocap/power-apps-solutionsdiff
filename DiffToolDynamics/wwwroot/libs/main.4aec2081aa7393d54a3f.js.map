{"version":3,"file":"../../DiffToolDynamics/wwwroot/libs/main.4aec2081aa7393d54a3f.js","mappings":"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AAc,CAAC,MAAM,CAAC,CAAC,CAAC;;;;;;;;;;;AC5J1D;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;;;;WCzBA;WACA;WACA;WACA;WACA,+BAA+B,wCAAwC;WACvE;WACA;WACA;WACA;WACA,iBAAiB,qBAAqB;WACtC;WACA;WACA,kBAAkB,qBAAqB;WACvC;WACA;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WC3BA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,sDAAsD;WACtD,sCAAsC,iEAAiE;WACvG;WACA;WACA;WACA;WACA;WACA;;;;;WCzBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;WCPD;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;;WAEA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM,qBAAqB;WAC3B;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;;;;;UEhDA;UACA;UACA;UACA;UACA","sources":["webpack://diff-front-end/./Components/Collapser.tsx","webpack://diff-front-end/./Components/CompareList/CompareList.classNames.ts","webpack://diff-front-end/./Components/CompareList/CompareList.tsx","webpack://diff-front-end/./Components/ConnectionStringManager/ConnectionStringManager.classNames.ts","webpack://diff-front-end/./Components/ConnectionStringManager/ConnectionStringManager.tsx","webpack://diff-front-end/./Components/DataConnector/BaseApiConnector.ts","webpack://diff-front-end/./Components/DataConnector/ConnectionStringLSConnector.ts","webpack://diff-front-end/./Components/DataConnector/DataConnector.ts","webpack://diff-front-end/./Components/LoadingAnimation.tsx","webpack://diff-front-end/./Components/SolutionDetail/SolutionDetail.classNames.ts","webpack://diff-front-end/./Components/SolutionDetail/SolutionDetail.tsx","webpack://diff-front-end/./Components/SolutionList/SolutionList.classNames.ts","webpack://diff-front-end/./Components/SolutionList/SolutionList.tsx","webpack://diff-front-end/./Components/SolutionPicker/SolutionPicker.classNames.ts","webpack://diff-front-end/./Components/SolutionPicker/SolutionPicker.tsx","webpack://diff-front-end/./Components/ViewSelection.tsx","webpack://diff-front-end/./Helper/Helpers.ts","webpack://diff-front-end/./Helper/ListHelpers.ts","webpack://diff-front-end/./Helper/LocalStorageHelper.ts","webpack://diff-front-end/./Helper/Model.ts","webpack://diff-front-end/./Pages/Home/Home.tsx","webpack://diff-front-end/./Pages/MultiConnection/MultiConnection.tsx","webpack://diff-front-end/./Pages/SingleConnection/SingleConnectionViewer.tsx","webpack://diff-front-end/./app.tsx","webpack://diff-front-end/ignored|D:\\ProgramData\\Repos\\DiffToolDynamics\\DiffFrontEnd\\node_modules\\xlsx|crypto","webpack://diff-front-end/ignored|D:\\ProgramData\\Repos\\DiffToolDynamics\\DiffFrontEnd\\node_modules\\xlsx|fs","webpack://diff-front-end/ignored|D:\\ProgramData\\Repos\\DiffToolDynamics\\DiffFrontEnd\\node_modules\\xlsx|stream","webpack://diff-front-end/webpack/bootstrap","webpack://diff-front-end/webpack/runtime/chunk loaded","webpack://diff-front-end/webpack/runtime/compat get default export","webpack://diff-front-end/webpack/runtime/create fake namespace object","webpack://diff-front-end/webpack/runtime/define property getters","webpack://diff-front-end/webpack/runtime/global","webpack://diff-front-end/webpack/runtime/hasOwnProperty shorthand","webpack://diff-front-end/webpack/runtime/make namespace object","webpack://diff-front-end/webpack/runtime/jsonp chunk loading","webpack://diff-front-end/webpack/before-startup","webpack://diff-front-end/webpack/startup","webpack://diff-front-end/webpack/after-startup"],"sourcesContent":["import { Link, Stack } from \"@fluentui/react\";\r\nimport React from \"react\"\r\n\r\nexport interface CollapserProps {\r\n    label: string;\r\n    children?: React.ReactNode;\r\n}\r\nexport const Collapser: React.FC<CollapserProps> = (props) => {\r\n    const [visible, setVisible] = React.useState(false);\r\n    const handleClickOnLink = () => {\r\n        setVisible(!visible);\r\n    }\r\n    return (\r\n        <Stack>\r\n            <Link onClick={handleClickOnLink} underline>\r\n                {props.label}\r\n            </Link>\r\n            {visible && props.children}\r\n        </Stack>\r\n    )\r\n}","import { mergeStyleSets } from '@fluentui/merge-styles';\r\nimport { getTheme } from '@fluentui/react/lib/Styling';\r\n\r\n\r\nconst theme = getTheme();\r\n\r\nexport const getClassNames = (props: { height: string }) => mergeStyleSets({\r\n    wrapper: {\r\n        height: props.height,\r\n        position: 'relative',\r\n        backgroundColor: 'white',\r\n    },\r\n    filter: {\r\n        backgroundColor: 'white',\r\n        width: 300,\r\n    },\r\n    onDrag: {\r\n        backgroundColor: theme.palette.neutralLight\r\n    },\r\n    row: {\r\n        flex: '0 0 auto',\r\n    }\r\n});\r\n","import { ConstrainMode, ContextualMenu, ContextualMenuItemType, DefaultButton, DetailsListLayoutMode, DetailsRow, DirectionalHint, IColumn, IColumnDragDropDetails, IconButton, IContextualMenuItem, IContextualMenuProps, IDetailsColumnProps, IDetailsColumnRenderTooltipProps, IDetailsFooterProps, IDetailsHeaderProps, IDetailsRowBaseProps, IRenderFunction, ITooltipHostStyles, ScrollablePane, ScrollbarVisibility, SearchBox, SelectionMode, ShimmeredDetailsList, Stack, Sticky, StickyPositionType, Text, TooltipHost } from \"@fluentui/react\";\r\nimport React from \"react\";\r\nimport { Helpers } from \"../../Helper/Helpers\";\r\nimport { ListHelpers } from \"../../Helper/ListHelpers\";\r\nimport { VersionStatus } from \"../../Helper/Model\";\r\nimport { DataConnector } from \"../DataConnector/DataConnector\";\r\nimport { SolutionListProp } from \"../SolutionList/SolutionList\";\r\nimport { getClassNames } from \"./CompareList.classNames\";\r\n\r\nconst calloutProps = { gapSpace: 0 };\r\nconst hostStyles: Partial<ITooltipHostStyles> = { root: { display: 'inline-block' } };\r\nconst refreshButtonStyles = { root: { verticalAlign: 'middle' } };\r\n\r\nexport interface SolutionDetailProp extends SolutionListProp {\r\n    Names: string[];\r\n}\r\n\r\ninterface ElementRow {\r\n    version: string, displayName: string, solutionName: string, logicalName: string, modifiedOn: Date, referenceEntity: string\r\n}\r\n\r\ninterface SolutionListState {\r\n    rows: ElementDetailInfoForNSolution[];\r\n    isLoading: boolean;\r\n    columns: IColumn[];\r\n    allItems: ElementDetailInfoForNSolution[];\r\n    allRows: ElementRow[];\r\n    contextualMenuProps?: IContextualMenuProps;\r\n}\r\n\r\ntype ElementDetailInfoForSolution = `${any}`;\r\n\r\ninterface ElementDetailInfoForNSolution {\r\n    logicalName: any;\r\n    displayName: any;\r\n    referenceEntity: any;\r\n    [prop: ElementDetailInfoForSolution]: {\r\n        version: string;\r\n        modifiedOn: Date;\r\n        solutionName: string;\r\n        status: VersionStatus;\r\n    }\r\n}\r\n\r\nexport class SolutionCompare extends React.Component<SolutionDetailProp, SolutionListState> {\r\n    controller = new AbortController()\r\n    signal = this.controller.signal\r\n    connector = new DataConnector(this.signal);\r\n    classNames = getClassNames({ height: \"75vh\" });\r\n    firstsColNames = [{ colName: \"Tipo\", order: 0, id: \"logicalName\" }, { colName: \"Nome\", order: 1, id: \"displayName\" }, { colName: \"Entità\", order: 1, id: \"referenceEntity\" }];\r\n\r\n    constructor(prop: SolutionDetailProp) {\r\n        super(prop);\r\n        this.state = {\r\n            rows: [],\r\n            isLoading: false,\r\n            columns: [],\r\n            allItems: [],\r\n            allRows: []\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const { rows, isLoading, columns, contextualMenuProps } = this.state;\r\n        return (\r\n            <div className={this.classNames.wrapper}>\r\n                <ScrollablePane scrollbarVisibility={ScrollbarVisibility.auto}>\r\n                    <Sticky stickyPosition={StickyPositionType.Header}>\r\n                        <Stack horizontal horizontalAlign=\"space-between\" style={{ alignItems: 'center', paddingLeft: '10px' }}>\r\n                            <Stack horizontal horizontalAlign=\"start\" verticalAlign=\"center\" tokens={{ childrenGap: 20 }}>\r\n                                <SearchBox\r\n                                    className={this.classNames.filter}\r\n                                    placeholder=\"Cerca\"\r\n                                    onChange={this.onFilterChange}\r\n                                />\r\n                                {!isLoading &&\r\n                                    <TooltipHost\r\n                                        content=\"Ricarica\"\r\n                                        id={Helpers.GetUUID()}\r\n                                        calloutProps={calloutProps}\r\n                                        styles={hostStyles}\r\n                                    >\r\n                                        <IconButton\r\n                                            styles={refreshButtonStyles}\r\n                                            className='refresh'\r\n                                            iconProps={{ iconName: 'Refresh' }}\r\n                                            onClick={this.onReloadClick.bind(this)}\r\n                                        />\r\n                                    </TooltipHost>\r\n                                }\r\n                                {!isLoading && rows.length > 0 && <DefaultButton text=\"Excel export\" onClick={this.handleExport.bind(this)} />}\r\n                                {<Text variant=\"mediumPlus\">{this.props.Names.length} Soluzioni selezionate</Text>}\r\n                            </Stack>\r\n                        </Stack>\r\n                    </Sticky>\r\n                    <ShimmeredDetailsList\r\n                        items={rows}\r\n                        columns={columns}\r\n                        setKey=\"set\"\r\n                        onRenderItemColumn={this.onRenderItemColumn}\r\n                        onRenderDetailsHeader={onRenderDetailsHeader}\r\n                        layoutMode={DetailsListLayoutMode.fixedColumns}\r\n                        constrainMode={ConstrainMode.unconstrained}\r\n                        enableShimmer={isLoading}\r\n                        selectionMode={SelectionMode.none}\r\n                        onColumnHeaderClick={this.onColumnClick}\r\n                        columnReorderOptions={{ frozenColumnCountFromStart: 2, onColumnDrop: this._handleColumnReorder.bind(this) }}\r\n                    />\r\n                    {contextualMenuProps && <ContextualMenu {...contextualMenuProps} />}\r\n                </ScrollablePane>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.controller.abort();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.load();\r\n    }\r\n\r\n    componentDidUpdate(prevProps: SolutionDetailProp) {\r\n        if (!Helpers.objectsEqual(prevProps, this.props)) {\r\n            this.reloadConnector();\r\n            this.load();\r\n        }\r\n    }\r\n\r\n    reloadConnector() {\r\n        this.controller.abort();\r\n        this.controller = new AbortController()\r\n        this.signal = this.controller.signal\r\n        this.connector = new DataConnector(this.signal);\r\n    }\r\n\r\n    handleExport(_ev: any) {\r\n\r\n        const fileName = \"CompareSolutions\" + new Date().toLocaleString().split(' ').join('_');\r\n        const sheetProps = {\r\n            Title: \"Compare Solutions\",\r\n            Subject: \"Solutions\",\r\n            CreatedDate: new Date()\r\n        };\r\n        const firstRow: { key: string, label: string }[] = this.state.columns.map(e => { return { key: e.key, label: e.name } });\r\n        ListHelpers.exportList(firstRow, this.props.Names, this.state.rows, sheetProps, fileName);\r\n    }\r\n\r\n    async load() {\r\n        this.setState({ isLoading: true });\r\n        const colsOrder = this.firstsColNames.concat(this.props.Names.map((e, i) => {\r\n            return {\r\n                colName: e, order: i + 3, id: e\r\n            }\r\n        }));\r\n\r\n        const cols: IColumn[] = colsOrder.map(a => {\r\n            return {\r\n                key: a.id,\r\n                name: a.colName,\r\n                minWidth: 200,\r\n                data: {\r\n                    isCompareFrom: a.order === 3,\r\n                    filters: {\r\n                        contains: false,\r\n                        notcontains: false\r\n                    }\r\n                },\r\n                onRenderHeader: this.onRenderHeader,\r\n                onColumnClick: this.onColumnClick,\r\n                isResizable: true,\r\n            }\r\n        });\r\n\r\n        this.setState({ columns: cols });\r\n\r\n        const data = await this.connector.GetSolutionsDetails({\r\n            ConnectionString: this.props.connectionStrings.map(e => {\r\n                return {\r\n                    Id: e.Id, Url: e.OrganizationUrl, Client: e.ClientId, Secret: e.Secret\r\n                }\r\n            })?.[0], Names: this.props.Names\r\n        });\r\n        if (data) {\r\n            let allSolutions: ElementRow[] = [];\r\n            data.forEach(e => {\r\n                allSolutions = allSolutions.concat(e.SolutionDetails.map(a => {\r\n                    return {\r\n                        version: a.Version,\r\n                        displayName: a.DisplayName,\r\n                        modifiedOn: new Date(a.ModifiedOn),\r\n                        logicalName: a.LogicalName,\r\n                        solutionName: e.SolutionName,\r\n                        referenceEntity: a.EntityReference\r\n                    }\r\n                }))\r\n            });\r\n            const orderedByProps = this.mapItems(allSolutions, cols);\r\n            this.setState({ rows: orderedByProps, allItems: orderedByProps, allRows: allSolutions });\r\n        }\r\n        this.setState({ isLoading: this.signal ? false : true });\r\n    }\r\n\r\n\r\n    _handleColumnReorder = (dragDropDetails: IColumnDragDropDetails) => {\r\n        const draggedIndex = dragDropDetails.draggedIndex;\r\n        const targetIndex = dragDropDetails.targetIndex;\r\n        const draggedItems = this.state.columns[draggedIndex];\r\n        const newColumns: IColumn[] = [...this.state.columns];\r\n\r\n        // insert before the dropped item\r\n        newColumns.splice(draggedIndex, 1);\r\n        newColumns.splice(targetIndex, 0, draggedItems);\r\n        this.setState({ columns: newColumns });\r\n    };\r\n\r\n    mapItems(allSolutions: ElementRow[], cols: IColumn[]) {\r\n        const groupedBySolution = Helpers.groupBy(allSolutions, (e) => e.displayName?.toLowerCase());\r\n        const items: ElementDetailInfoForNSolution[] = [];\r\n        const defaultCompare = cols.find(e => e.data?.isCompareFrom);\r\n        for (const uniqueName of groupedBySolution.keys()) {\r\n            const elems = groupedBySolution.get(uniqueName);\r\n            if (elems) {\r\n                const item: ElementDetailInfoForNSolution = {\r\n                    logicalName: elems[0].logicalName as any,\r\n                    displayName: uniqueName as any,\r\n                    referenceEntity: elems[0].referenceEntity as any\r\n                }\r\n                let versionVal: string;\r\n                let id: string;\r\n                if (defaultCompare) {\r\n                    id = defaultCompare.key;\r\n                    const compareElem = elems.find(e => e.solutionName === id);\r\n                    if (compareElem) {\r\n                        versionVal = compareElem.version;\r\n                    }\r\n                }\r\n                elems.forEach(e => {\r\n                    item[e.solutionName as any] = { solutionName: e.solutionName, version: e.version, modifiedOn: new Date(e.modifiedOn), status: this.getStatus(e, versionVal, id) };\r\n                });\r\n                items.push(item);\r\n            }\r\n        }\r\n        const orderedByProps = items.sort((a, b) => {\r\n            const numberOfA = Object.keys(a).length;\r\n            const numberOfB = Object.keys(b).length;\r\n            return (numberOfA > numberOfB) ? -1 : 1;\r\n        });\r\n        return orderedByProps;\r\n    }\r\n\r\n    getStatus(elem: ElementRow, compareVal?: string, compareName?: string) {\r\n        if (compareName && compareVal) {\r\n            if (elem.solutionName === compareName) {\r\n                return VersionStatus.Default\r\n            } else\r\n                return elem.version === compareVal ? VersionStatus.Equal : (elem.version > compareVal ? VersionStatus.Above : VersionStatus.Under);\r\n        }\r\n        return VersionStatus.Default;\r\n    }\r\n\r\n    onFilterChange = (_ev?: React.FormEvent<HTMLElement>, text?: string) => {\r\n        const elems = this.state.allItems;\r\n        Helpers.StringIsNotNullOrEmpty(text) ? this.setState({ rows: elems.filter((item) => this.hasText(item, text as string)) }) : this.setState({ rows: elems });\r\n\r\n    }\r\n\r\n    hasText = (item: any, text: string): boolean => {\r\n        const stringed = Object.keys(item).map(prop => item[prop] !== null && item[prop] !== undefined ? item[prop].toString().toLowerCase() : \"\").join('|');\r\n        return stringed.indexOf(text.toLowerCase()) > -1;\r\n    }\r\n\r\n    onColumnClick = (ev?: React.MouseEvent<HTMLElement>, column?: IColumn) => {\r\n        if (column && ev && !this.state.isLoading) {\r\n            const prop = this.getContextualMenuProps(ev, column);\r\n            this.setState({ contextualMenuProps: prop })\r\n        }\r\n    }\r\n\r\n    getContextualMenuProps = (ev: React.MouseEvent<HTMLElement>, column: IColumn): IContextualMenuProps => {\r\n        const menuItems: IContextualMenuItem[] = [];\r\n        if (this.firstsColNames.map(e => e.id).some(e => column.key.includes(e))) {\r\n            menuItems.push({\r\n                key: 'aToZ',\r\n                name: \"Sort A to Z\",\r\n                iconProps: { iconName: 'SortUp' },\r\n                canCheck: true,\r\n                checked: column.isSorted && !column.isSortedDescending,\r\n                onClick: () => {\r\n                    this.onSort(column, false);\r\n                    this.onContextualMenuDismissed()\r\n                },\r\n            });\r\n\r\n            menuItems.push({\r\n                key: 'zToA',\r\n                name: \"Sort Z to A\",\r\n                iconProps: { iconName: 'SortDown' },\r\n                canCheck: true,\r\n                checked: column.isSorted && column.isSortedDescending,\r\n                onClick: () => {\r\n                    this.onSort(column, true);\r\n                    this.onContextualMenuDismissed()\r\n                },\r\n            });\r\n        } else {\r\n            menuItems.push({\r\n                key: 'compare',\r\n                name: \"Compare From\",\r\n                iconProps: { iconName: 'Compare' },\r\n                canCheck: true,\r\n                checked: column.data?.isCompareFrom,\r\n                disabled: column.data?.isCompareFrom,\r\n                onClick: () => {\r\n                    this.onToggleSelect(column.key, !column.data?.isCompareFrom);\r\n                    this.onContextualMenuDismissed()\r\n                },\r\n            });\r\n            menuItems.push({\r\n                key: 'divider_1',\r\n                itemType: ContextualMenuItemType.Divider,\r\n            });\r\n            menuItems.push({\r\n                key: 'contains',\r\n                name: \"Contains Data\",\r\n                iconProps: { iconName: 'Filter' },\r\n                canCheck: true,\r\n                checked: column.data?.filters.contains,\r\n                onClick: () => {\r\n                    this.onFilterSelect(column, 'contains', !column.data?.filters.contains);\r\n                    this.onContextualMenuDismissed()\r\n                },\r\n            });\r\n            menuItems.push({\r\n                key: 'notcontains',\r\n                name: \"Does not Contains Data\",\r\n                iconProps: { iconName: 'Filter' },\r\n                canCheck: true,\r\n                checked: column.data?.filters.notcontains,\r\n                onClick: () => {\r\n                    this.onFilterSelect(column, 'notcontains', !column.data?.filters.notcontains);\r\n                    this.onContextualMenuDismissed()\r\n                },\r\n            });\r\n        }\r\n\r\n        return {\r\n            items: menuItems,\r\n            target: ev.currentTarget as HTMLElement,\r\n            directionalHint: DirectionalHint.bottomLeftEdge,\r\n            gapSpace: 10,\r\n            isBeakVisible: false,\r\n            onDismiss: this.onContextualMenuDismissed,\r\n        };\r\n    }\r\n\r\n    onToggleSelect = (key: string, selected: boolean) => {\r\n        const { columns, allRows } = this.state;\r\n        columns.forEach(e => { e.data.isCompareFrom = false });\r\n        const interestedCol = columns.find(e => e.key === key);\r\n        if (interestedCol && selected) {\r\n            interestedCol.data.isCompareFrom = selected;\r\n        }\r\n        else {\r\n            const defaultCompare = columns.find(e => e.key === this.props.connectionStrings?.[0]?.Id);\r\n            if (defaultCompare) {\r\n                defaultCompare.data.isCompareFrom = true;\r\n            }\r\n        }\r\n        const data = this.mapItems(allRows, columns);\r\n        this.setState({ columns: columns, allItems: data, rows: data });\r\n    }\r\n\r\n    onFilterSelect = (column: IColumn, filterKey: string, isCheck: boolean) => {\r\n        const { columns, allRows } = this.state;\r\n        columns.filter(e => e.data?.filters).forEach(a => Object.keys(a.data.filters).forEach(e => a.data.filters[e] = false));\r\n        const interestedCol = columns.find(e => e.key === column.key);\r\n        let newAllRows = allRows;\r\n        if (interestedCol) {\r\n            Object.keys(interestedCol.data.filters).forEach(e => interestedCol.data.filters[e] = false);\r\n            interestedCol.data.filters[filterKey] = isCheck;\r\n            if (isCheck) {\r\n                const groupedBySolution = Helpers.groupBy(allRows, (e) => e.displayName?.toLowerCase());\r\n                for (const uniqueName of groupedBySolution.entries()) {\r\n                    if (uniqueName[1]) {\r\n                        let contains: ElementRow | undefined;\r\n                        switch (filterKey) {\r\n                            case 'notcontains':\r\n                                contains = uniqueName[1].find(e => e.solutionName === column.key);\r\n                                if (contains) {\r\n                                    groupedBySolution.delete(uniqueName[0]);\r\n                                }\r\n                                break;\r\n                            case 'contains':\r\n                                contains = uniqueName[1].find(e => e.solutionName === column.key);\r\n                                if (!contains) {\r\n                                    groupedBySolution.delete(uniqueName[0]);\r\n                                }\r\n                                break;\r\n                            default:\r\n                                break;\r\n                        }\r\n                    }\r\n                }\r\n                newAllRows = [];\r\n                for (const uniqueName of groupedBySolution.entries()) {\r\n                    newAllRows = newAllRows.concat(uniqueName[1]);\r\n                }\r\n            }\r\n        }\r\n\r\n        const data = this.mapItems(newAllRows, columns);\r\n        const groupedBySolutionName = Helpers.groupBy(newAllRows, (e) => e.solutionName);\r\n        columns.forEach(e => {\r\n            const foundGroup = groupedBySolutionName.has(e.key);\r\n            if (foundGroup) {\r\n                e.data.count = groupedBySolutionName.get(e.key)?.length;\r\n            }\r\n        })\r\n        this.setState({ columns: columns, allItems: data, rows: data });\r\n    }\r\n\r\n\r\n    onContextualMenuDismissed = () => {\r\n        this.setState({ contextualMenuProps: undefined })\r\n    }\r\n\r\n    onSort = (column: IColumn, isDescending: boolean): void => {\r\n        const { columns, rows } = this.state;\r\n        const newColumns: IColumn[] = columns.slice();\r\n        const currColumn = newColumns.find(e => e.key === column.key);\r\n        if (currColumn) {\r\n            newColumns.forEach((newCol: IColumn) => {\r\n                if (newCol === currColumn) {\r\n                    currColumn.isSortedDescending = isDescending;\r\n                    currColumn.isSorted = true;\r\n                } else {\r\n                    newCol.isSorted = false;\r\n                    newCol.isSortedDescending = false;\r\n                }\r\n            });\r\n            // Sort the items.\r\n            const newRows = Helpers.copyAndSort(rows, column.key!, isDescending);\r\n\r\n            // Reset the items and columns to match the state.\r\n            this.setState({\r\n                rows: newRows,\r\n                columns: newColumns\r\n            });\r\n        }\r\n    };\r\n\r\n    onReloadClick = () => {\r\n        this.setState({ rows: [] });\r\n        this.load();\r\n    };\r\n\r\n    onRenderHeader: IRenderFunction<IDetailsColumnProps> = (props, defaultRender) => {\r\n        if (props && defaultRender) {\r\n            return (\r\n                <Stack horizontal tokens={{ childrenGap: 5 }} verticalAlign=\"center\">\r\n                    <Text variant=\"smallPlus\">{props.column.name ?? props.column.fieldName}</Text>\r\n                    <IconButton iconProps={{ iconName: \"ChevronDown\" }}></IconButton>\r\n                    {props.column.data?.isCompareFrom && <IconButton iconProps={{ iconName: \"Compare\" }}></IconButton>}\r\n                </Stack>\r\n            );\r\n        }\r\n        return null;\r\n    }\r\n\r\n    onRenderItemColumn = (item: any, _index?: number, column?: IColumn): JSX.Element | string | number => {\r\n        let result = \"---\";\r\n        if (column && column.name) {\r\n            const el = item[column.name] ?? item[column.key];\r\n            if (el && typeof (el) === \"object\") {\r\n                let color = \"\";\r\n                const status = el.status;\r\n                if (status)\r\n                    switch (Number(el.status) as VersionStatus) {\r\n                        case VersionStatus.Equal.valueOf():\r\n                            color = \"green\";\r\n                            break;\r\n                        case VersionStatus.Under.valueOf():\r\n                            color = \"red\";\r\n                            break;\r\n                        case VersionStatus.Above.valueOf():\r\n                            color = \"gold\";\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                const rend = (\r\n                    <Stack>\r\n                        <Stack horizontal horizontalAlign=\"space-between\">\r\n                            <Text variant=\"medium\">{\"Versione:\"}</Text>\r\n                            <Text variant=\"medium\" style={{ color: color }}>{el.version}</Text>\r\n                        </Stack>\r\n                        <Stack horizontal horizontalAlign=\"space-between\">\r\n                            <Text variant=\"medium\">{\"Ultima modifica:\"}</Text>\r\n                            <Text variant=\"medium\">{el.modifiedOn?.toLocaleString() ?? ''}</Text>\r\n                        </Stack>\r\n                    </Stack>);\r\n                return rend;\r\n            }\r\n            else if (el)\r\n                result = el;\r\n        }\r\n        return <Text variant=\"medium\">{result}</Text>;\r\n    };\r\n\r\n    onRenderDetailsFooter: IRenderFunction<IDetailsFooterProps> = (props, _defaultRender) => {\r\n        if (!props) {\r\n            return null;\r\n        }\r\n        return (\r\n            <Sticky stickyPosition={StickyPositionType.Footer} isScrollSynced>\r\n                <div className={this.classNames.row}>\r\n                    <DetailsRow\r\n                        columns={props.columns}\r\n                        item={{}}\r\n                        itemIndex={-1}\r\n                        selection={props.selection}\r\n                        selectionMode={(props.selection && props.selection.mode) || SelectionMode.none}\r\n                        rowWidth={props.rowWidth}\r\n                        onRenderItemColumn={this._renderDetailsFooterItemColumn}\r\n                    />\r\n                </div>\r\n            </Sticky>\r\n        );\r\n    };\r\n    _renderDetailsFooterItemColumn: IDetailsRowBaseProps['onRenderItemColumn'] = (_item, _index, column) => {\r\n        if (column) {\r\n            return (\r\n                <div>\r\n                    <b>{column.data.count}</b>\r\n                </div>\r\n            );\r\n        }\r\n        return undefined;\r\n    };\r\n\r\n}\r\n\r\nconst onRenderDetailsHeader: IRenderFunction<IDetailsHeaderProps> = (props, defaultRender) => {\r\n    if (!props) {\r\n        return null;\r\n    }\r\n    const onRenderColumnHeaderTooltip: IRenderFunction<IDetailsColumnRenderTooltipProps> = tooltipHostProps => (\r\n        <TooltipHost {...tooltipHostProps} />\r\n    );\r\n    return (\r\n        <Sticky stickyPosition={StickyPositionType.Header} isScrollSynced>\r\n            {defaultRender!({\r\n                ...props,\r\n                onRenderColumnHeaderTooltip,\r\n            })}\r\n        </Sticky>\r\n    );\r\n};","import { mergeStyleSets } from '@fluentui/merge-styles';\r\nimport { FontWeights } from '@fluentui/style-utilities';\r\n\r\n\r\n\r\nexport const getClassNames = () => mergeStyleSets({\r\n    sectionHeader: {\r\n        borderBottom: '1px solid rgb(161, 159, 157)',\r\n        display: 'flex',\r\n        overflow: 'hidden',\r\n        position: 'relative'\r\n    },\r\n    card: {\r\n        boxShadow: \"0 2px 4px 0 rgba(0,0,0,0.2)\",\r\n        transition: \"0.3s\",\r\n        borderRadius: \"3px\",\r\n        //width:\"48%\"\r\n    },\r\n    container: {\r\n        padding: \"2px 16px\"\r\n    },\r\n    cardtoPick: {\r\n        boxShadow: \"0 2px 4px 0 rgba(0,0,0,0.2)\",\r\n        transition: \"0.3s\",\r\n        borderRadius: \"3px\",\r\n        ':hover': {\r\n            boxShadow: '0 4px 8px 0 rgba(0,0,0,0.2)'\r\n        }\r\n    },\r\n    badge: {\r\n        position: 'absolute',\r\n        background: 'blue',\r\n        color: 'white',\r\n        borderRadius: '10px',\r\n        width: '20px',\r\n        height: '20px'\r\n    },\r\n    wrapper: {\r\n        height: '70vh',\r\n        position: 'relative',\r\n        backgroundColor: 'white',\r\n    },\r\n    bold: {\r\n        fontWeight: FontWeights.bold\r\n    },\r\n    control: {\r\n        margin: '0 0 15px 0',\r\n        maxWidth: '400px',\r\n    },\r\n});\r\n","import { Checkbox, DefaultButton, IconButton, ITextFieldStyles, PrimaryButton, Stack, TextField, Text, IStackTokens, Dialog, Spinner, SpinnerSize, DialogFooter, DialogType } from \"@fluentui/react\";\r\nimport React from \"react\";\r\nimport { Guid, XrmConnectionString, XrmConnectionStringExp } from \"../../Helper/Model\";\r\nimport { getClassNames } from \"./ConnectionStringManager.classNames\";\r\nimport { ConnectionStringLSConnector } from \"../DataConnector/ConnectionStringLSConnector\";\r\n\r\ninterface SolutionViewerState {\r\n    AllConnections: XrmConnectionStringExp[];\r\n    EditConnection?: XrmConnectionStringExp;\r\n    isDialogOpen: boolean;\r\n    dialogContentProps?: any;\r\n    isSaving: boolean;\r\n}\r\n\r\n\r\n\r\nconst verticalGapStackTokens: IStackTokens = {\r\n    childrenGap: 20,\r\n    padding: 10,\r\n};\r\n\r\nexport interface ConnectionStringManagerProp { SelectionMode: \"single\" | \"multiple\" }\r\n\r\nexport default class ConnectionStringManager extends React.Component<ConnectionStringManagerProp, SolutionViewerState> {\r\n    lsConnector = new ConnectionStringLSConnector();\r\n\r\n    constructor(prop: ConnectionStringManagerProp | Readonly<ConnectionStringManagerProp>) {\r\n        super(prop);\r\n        this.state = {\r\n            AllConnections: [],\r\n            isDialogOpen: false,\r\n            isSaving: false\r\n        }\r\n    }\r\n    render() {\r\n        const { EditConnection, AllConnections, isDialogOpen, isSaving, dialogContentProps } = this.state;\r\n        return (\r\n            <Stack style={{ width: '100%' }}>\r\n                <Stack horizontal style={{ width: '100%' }}>\r\n                    <IconButton iconProps={{ iconName: \"Add\" }} title=\"Add\" ariaLabel=\"Add\" onClick={() => this.AddNewConnectionClick()} />\r\n                    <Stack\r\n                        horizontal\r\n                        verticalFill\r\n                        wrap\r\n                        horizontalAlign={\"start\"}\r\n                        verticalAlign={\"start\"}\r\n                        tokens={verticalGapStackTokens}>\r\n                        {EditConnection && <ConnectionStringCard {...EditConnection} />}\r\n                        {AllConnections.map(e => <ConnectionStringCard key={e.Id} {...e} />)}\r\n                    </Stack>\r\n                </Stack>\r\n                {this.props.children && React.cloneElement(this.props.children as any, { connectionStrings: AllConnections.filter(e => e.isSelected) })}\r\n                <Dialog\r\n                    hidden={!isDialogOpen}\r\n                    onDismiss={this.clickedNo.bind(this)}\r\n                    dialogContentProps={dialogContentProps}\r\n                    modalProps={{ isBlocking: true }}\r\n                >\r\n                    {isSaving && <Spinner size={SpinnerSize.medium} />}\r\n                    <DialogFooter>\r\n                        <PrimaryButton disabled={isSaving} onClick={dialogContentProps && dialogContentProps.clickedYes} text=\"Si\" />\r\n                        <DefaultButton disabled={isSaving} onClick={dialogContentProps && dialogContentProps.clickedNo} text=\"No\" />\r\n                    </DialogFooter>\r\n                </Dialog>\r\n                {/* <SolutionList {...{ connectionStrings: AllConnections.filter(e => e.isSelected) }} /> */}\r\n            </Stack>\r\n        );\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.getAllConnections();\r\n    }\r\n\r\n    async getAllConnections() {\r\n        const connections = this.lsConnector.GetAll();\r\n        // const connections = await this.connector.GetAll();\r\n        if (connections)\r\n            this.setState({\r\n                AllConnections: connections.map(e => {\r\n                    return { ...e, isEditMode: false, onEdit: this.onEdit.bind(this), onSave: this.onSave.bind(this), isSelected: false, onSelect: this.onSelect.bind(this), onDelete: this.onDelete.bind(this) }\r\n                })\r\n            });\r\n    }\r\n\r\n    clickedNo = () => {\r\n        this.setState({ isDialogOpen: false, dialogContentProps: undefined });\r\n    }\r\n\r\n    AddNewConnectionClick() {\r\n        const newAdd: XrmConnectionStringExp = { ClientId: \"\", Id: Guid.Empty, IpAddress: \"\", Name: \"\", OrganizationUrl: \"\", Save: true, Secret: \"\", isEditMode: true, onEdit: this.onEdit.bind(this), onSave: this.onSave.bind(this), isSelected: false, onSelect: this.onSelect.bind(this), onDelete: this.onDelete.bind(this) };\r\n        this.setState({ EditConnection: newAdd });\r\n    }\r\n\r\n    onEdit(id: string, edit: boolean) {\r\n        const conn = this.state.AllConnections;\r\n        const found = conn.find(p => {\r\n            if (p.Id !== id) return false;\r\n            p.isEditMode = edit;\r\n            return true;\r\n        });\r\n        if (found) {\r\n            this.setState({ AllConnections: conn });\r\n        } else {\r\n            this.setState({ EditConnection: undefined });\r\n        }\r\n    }\r\n\r\n    onSelect(id: string, selected: boolean) {\r\n        const conn = this.state.AllConnections;\r\n        if (this.props.SelectionMode === \"single\")\r\n            conn.forEach(con => con.isSelected = false);\r\n        const found = conn.find(p => {\r\n            if (p.Id !== id) return false;\r\n            p.isSelected = selected;\r\n            return true;\r\n        });\r\n        if (found) {\r\n            this.setState({ AllConnections: conn });\r\n        } else {\r\n            this.setState({ EditConnection: undefined });\r\n        }\r\n    }\r\n\r\n\r\n    async onSave(toSave: XrmConnectionString) {\r\n        // const saved = await this.connector.AddOrUpdate(toSave);\r\n        this.lsConnector.AddOrUpdate(toSave);\r\n        await this.getAllConnections();\r\n        this.setState({ EditConnection: undefined });\r\n    }\r\n\r\n    onDelete = (id: string) => {\r\n        const conn = this.state.AllConnections;\r\n        const found = conn.find(p => p.Id === id);\r\n        if (found) {\r\n            const dialogContentProps = {\r\n                type: DialogType.normal,\r\n                title: 'Elimina connessione',\r\n                closeButtonAriaLabel: 'Chiudi',\r\n                subText: `Vuoi eliminare la connessione ${found.Name} - ${found.OrganizationUrl}`,\r\n                clickedYes: () => this.clickedDelete(id),\r\n                clickedNo: this.clickedNo\r\n            };\r\n            this.setState({ isDialogOpen: true, dialogContentProps: dialogContentProps });\r\n        }\r\n    }\r\n\r\n    clickedDelete = (id: string) => {\r\n        this.lsConnector.Remove(id);\r\n        this.getAllConnections();\r\n        this.clickedNo();\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nconst textFieldStyles: Partial<ITextFieldStyles> = { fieldGroup: { width: 200, maxWidth: 200 } };\r\nconst stackTokens = { childrenGap: 15 };\r\nexport const ConnectionStringCard: React.FC<XrmConnectionStringExp> = (props) => {\r\n    const style = getClassNames();\r\n    const [ClientIdFieldValue, setClientIdFieldValue] = React.useState(props.ClientId);\r\n    const [SecretFieldValue, setSecretFieldValue] = React.useState(props.Secret);\r\n    const [NameFieldValue, setNameFieldValue] = React.useState(props.Name);\r\n    const [OrganizationUrlFieldValue, setOrganizationUrlFieldValue] = React.useState(props.OrganizationUrl);\r\n\r\n    const onSave = () => {\r\n        const toSave: XrmConnectionString = { Id: props.Id, OrganizationUrl: OrganizationUrlFieldValue, Name: NameFieldValue, Secret: SecretFieldValue, ClientId: ClientIdFieldValue, IpAddress: props.IpAddress, Save: props.Save };\r\n        props.onSave(toSave);\r\n    }\r\n\r\n    const title = `${props.Name} - ${props.OrganizationUrl}`;\r\n    return (\r\n        <div className={style.cardtoPick} /*onClick={() => props.onClickActive(props)}*/>\r\n            <div className={style.container}>\r\n                <Stack horizontal horizontalAlign=\"space-between\" verticalAlign=\"center\">\r\n                    {props.isEditMode ?\r\n                        <Stack tokens={{ ...stackTokens, padding: 5 }}>\r\n                            <Stack horizontal tokens={stackTokens}>\r\n                                <TextField\r\n                                    label=\"Nome\"\r\n                                    value={NameFieldValue}\r\n                                    onChange={(_e, newValue) => setNameFieldValue(newValue || '')}\r\n                                    styles={textFieldStyles}\r\n                                    type=\"Name\"\r\n                                />\r\n                                <TextField\r\n                                    label=\"Organization Url\"\r\n                                    value={OrganizationUrlFieldValue}\r\n                                    onChange={(_e, newValue) => setOrganizationUrlFieldValue(newValue || '')}\r\n                                    styles={textFieldStyles}\r\n                                    type=\"Organization\"\r\n                                />\r\n                            </Stack>\r\n                            <Stack horizontal tokens={stackTokens}>\r\n                                <TextField\r\n                                    label=\"Client Id\"\r\n                                    value={ClientIdFieldValue}\r\n                                    onChange={(_e, newValue) => setClientIdFieldValue(newValue || '')}\r\n                                    styles={textFieldStyles}\r\n                                    type=\"ClientId\"\r\n                                />\r\n                                <TextField\r\n                                    label=\"Secret\"\r\n                                    value={SecretFieldValue}\r\n                                    onChange={(_e, newValue) => setSecretFieldValue(newValue || '')}\r\n                                    styles={textFieldStyles}\r\n                                    type=\"Secret\"\r\n                                />\r\n                            </Stack>\r\n                            <Stack horizontal tokens={stackTokens}>\r\n                                <DefaultButton text=\"Annulla\" onClick={() => props.onEdit(props.Id, false)} allowDisabledFocus />\r\n                                <PrimaryButton text=\"Salva\" onClick={() => onSave()} allowDisabledFocus />\r\n                            </Stack>\r\n                        </Stack>\r\n                        :\r\n                        <Stack horizontal horizontalAlign=\"space-between\" verticalAlign=\"center\">\r\n                            <Text variant=\"mediumPlus\" >{title}</Text>\r\n                            <IconButton iconProps={{ iconName: \"Edit\" }} title=\"Edit\" onClick={() => props.onEdit(props.Id, true)} />\r\n                            <IconButton iconProps={{ iconName: \"Cancel\", color: 'red' }} title=\"Cancella\" onClick={() => props.onDelete(props.Id)} />\r\n                        </Stack>}\r\n                    {props.Id && <Checkbox checked={props.isSelected} onChange={() => props.onSelect(props.Id, !props.isSelected)} />}\r\n                </Stack>\r\n            </div>\r\n        </ div>\r\n    )\r\n}\r\n","// import axios from \"axios\";\r\n\r\nfunction Serialize(parameters: { [s: string]: any; }) {\r\n    const keys = Object.keys(parameters);\r\n    const toRet = keys.map(k => {\r\n        let val = \"\";\r\n        if (Array.isArray(parameters[k]))\r\n            // val = JSON.stringify(parameters[k]);\r\n            val = '[' + parameters[k].map((e: any) => \"'\" + e + \"'\").join(',') + ']';\r\n        else\r\n            val = parameters[k];\r\n        return k + '=' + val\r\n    }).join('&');\r\n    return toRet;\r\n}\r\n\r\nexport class BaseApiConnector {\r\n    protected apiUrl = \"\";\r\n    constructor() {\r\n        this.apiUrl = window.location.hostname;\r\n    }\r\n\r\n    static async Retrieve<T>(signal: AbortSignal, controller: string, method: string, parameters?: { [s: string]: any; }): Promise<T> {\r\n        try {\r\n            const query = parameters ? \"?\" + Serialize(parameters) : \"\";\r\n            const url = encodeURI(`/api/${controller}/${method}${query}`);\r\n            const resp = await fetch(url, { signal: signal });\r\n            return await resp.json() as T\r\n            //return (await axios.get<T>(url)).data;\r\n        } catch (ex: any) {\r\n            throw ex;\r\n        }\r\n    }\r\n\r\n    static async Post<T>(signal: AbortSignal, controller: string, method: string, data: any): Promise<T> {\r\n        try {\r\n            const url = encodeURI(`/api/${controller}/${method}`);\r\n            const resp = await fetch(url, {\r\n                signal: signal,\r\n                method: \"POST\",\r\n                mode: 'cors',\r\n                redirect: 'follow',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: data ? JSON.stringify(data) : undefined\r\n            });\r\n            return await resp.json() as T\r\n            // return (await axios.post<T>(url, data)).data;\r\n        } catch (ex: any) {\r\n            throw ex;\r\n        }\r\n    }\r\n\r\n\r\n    static async Upload<T>(signal: AbortSignal, controller: string, method: string, data: any, additionalUrl?: string): Promise<T> {\r\n        try {\r\n            const url = encodeURI(`/api/${controller}/${method}${additionalUrl}`);\r\n            const resp = await fetch(url, {\r\n                signal: signal,\r\n                method: \"POST\",\r\n                mode: 'cors',\r\n                redirect: 'follow',\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                },\r\n                body: data ? JSON.stringify(data) : undefined\r\n            });\r\n            return await resp.json() as T;\r\n            // return (await axios.post<T>(url, data, config)).data;\r\n        } catch (ex: any) {\r\n            throw ex;\r\n        }\r\n    }\r\n\r\n\r\n    //static async DownloadGet(controller: string, method: string, parameters?: { [s: string]: any; }) {\r\n    //    try {\r\n    //        const query = parameters ? \"?\" + Serialize(parameters) : \"\";\r\n    //        const url = encodeURI(`/${controller}/${method}${query}`);\r\n    //        const response = await axios({\r\n    //            url: url,\r\n    //            method: 'GET',\r\n    //            responseType: 'blob',\r\n    //        });\r\n    //        PromptDownload(response);\r\n\r\n    //    } catch (ex) {\r\n    //        const error =\r\n    //            ex.response.status === 404\r\n    //                ? \"Resource not found\"\r\n    //                : \"An unexpected error has occurred\";\r\n    //        console.error(error);\r\n    //        throw ex;\r\n    //    }\r\n    //    return;\r\n    //}\r\n\r\n    //static async DownloadPost(controller: string, method: string, data: any) {\r\n    //    try {\r\n    //        const url = encodeURI(`/${controller}/${method}`);\r\n    //        const response = await axios({\r\n    //            url: url,\r\n    //            method: 'POST',\r\n    //            responseType: 'blob',\r\n    //            data: data\r\n    //        });\r\n    //        PromptDownload(response);\r\n    //    } catch (ex) {\r\n    //        const error =\r\n    //            ex.response.status === 404\r\n    //                ? \"Resource not found\"\r\n    //                : \"An unexpected error has occurred\";\r\n    //        console.error(error);\r\n    //        throw ex;\r\n    //    }\r\n    //    return;\r\n    //}\r\n}\r\n\r\n//const PromptDownload = (response: AxiosResponse) => {\r\n//    const fileNameHeader = \"content-disposition\";\r\n//    const suggestedFileName = response.headers[fileNameHeader];\r\n//    const effectiveFileName = suggestedFileName ? headerToFileName(suggestedFileName) : \"nofilename\";\r\n//    console.log(\"Received header [\" + fileNameHeader + \"]: \" + suggestedFileName\r\n//        + \", effective fileName: \" + effectiveFileName);\r\n//    const urlObj = window.URL.createObjectURL(new Blob([response.data]));\r\n//    const link = document.createElement('a');\r\n//    link.href = urlObj;\r\n//    link.setAttribute('download', effectiveFileName);\r\n//    document.body.appendChild(link);\r\n//    link.click();\r\n//}\r\n\r\n//const headerToFileName = (header: string) => {\r\n//    if (Helpers.StringIsNotNullOrEmpty(header)) {\r\n//        header = header.replace(/\"/gi, '');\r\n//        const match = \"filename=\";\r\n//        const temp = header.substr(header.indexOf(match) + match.length);\r\n//        return temp\r\n//    }\r\n//    return header;\r\n//}\r\n","import { LSHelper } from \"../../Helper/LocalStorageHelper\";\r\nimport { Guid, XrmConnectionString } from \"../../Helper/Model\";\r\n\r\nconst LSCONNECTIONS_KEY = 'connections';\r\n\r\nexport class ConnectionStringLSConnector {\r\n\r\n    GetAll() {\r\n        return LSHelper.getWithExpiry(LSCONNECTIONS_KEY) as XrmConnectionString[] | null;\r\n    }\r\n\r\n    AddOrUpdate(model: XrmConnectionString) {\r\n        let exisitng = this.GetAll();\r\n        if (!exisitng)\r\n            exisitng = [];\r\n        if (model.Id && model.Id !== Guid.Empty) {\r\n            let had = exisitng.find(e => e.Id === model.Id);\r\n            if (had) {\r\n                Object.assign(had, model);\r\n            } else {\r\n                exisitng.push(model);\r\n            }\r\n        } else {\r\n            model.Id = Guid.newGuid();\r\n            exisitng.push(model);\r\n        }\r\n        LSHelper.setWithExpiry(LSCONNECTIONS_KEY, exisitng);\r\n    }\r\n\r\n    Remove(id: string) {\r\n        let exisitng = this.GetAll();\r\n        let newArr: XrmConnectionString[] = [];\r\n        if (!exisitng)\r\n            exisitng = [];\r\n        if (id && id !== Guid.Empty) {\r\n            newArr = exisitng.filter(e => e.Id !== id);\r\n        } else {\r\n            newArr = exisitng;\r\n        }\r\n        LSHelper.setWithExpiry(LSCONNECTIONS_KEY, newArr);\r\n    }\r\n}","import { ConnectionStringRequest, ElementDetailsForSolution, SolutionDetailsForConnectionString, SolutionDetailsForConnectionStringRequest, SolutionsDetailsRequest, SolutionsForConnectionString } from \"../../Helper/Model\";\r\nimport { BaseApiConnector } from \"./BaseApiConnector\";\r\n\r\nexport class DataConnector {\r\n    _signal: AbortSignal;\r\n    constructor(signal: AbortSignal) {\r\n        this._signal = signal\r\n    }\r\n    public async GetSolutionsForConnectionStrings(model: { ConnectionStrings: ConnectionStringRequest[] }): Promise<SolutionsForConnectionString[]> {\r\n        try {\r\n            const result = await BaseApiConnector.Post<SolutionsForConnectionString[]>(this._signal, \"Data\", \"GetSolutionsForConnectionStrings\", model);\r\n            if (result) {\r\n                return result;\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n        return [];\r\n    }\r\n\r\n    public async GetSolutionDetailsForConnectionStrings(model: SolutionDetailsForConnectionStringRequest): Promise<SolutionDetailsForConnectionString[]> {\r\n        try {\r\n            const result = await BaseApiConnector.Post<SolutionDetailsForConnectionString[]>(this._signal, \"Data\", \"GetSolutionsDetailsForConnections\", model);\r\n            if (result) {\r\n                return result;\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n        return [];\r\n    }\r\n\r\n    public async GetSolutionsDetails(model: SolutionsDetailsRequest): Promise<ElementDetailsForSolution[]> {\r\n        try {\r\n            const result = await BaseApiConnector.Post<ElementDetailsForSolution[]>(this._signal, \"Data\", \"GetSolutionsDetails\", model);\r\n            if (result) {\r\n                return result;\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n        return [];\r\n    }\r\n\r\n\r\n}","import { Overlay, Spinner, SpinnerSize, Stack } from \"@fluentui/react\";\r\nimport React from \"react\";\r\n\r\nexport default function Waiter() {\r\n    return (\r\n        <Overlay>\r\n            <Stack verticalFill verticalAlign=\"center\" horizontalAlign=\"center\">\r\n                <Spinner size={SpinnerSize.large} />\r\n            </Stack>\r\n        </Overlay>\r\n    );\r\n};","import { mergeStyleSets } from '@fluentui/merge-styles';\r\nimport { getTheme } from '@fluentui/react/lib/Styling';\r\n\r\n\r\nconst theme = getTheme();\r\n\r\nexport const getClassNames = (props: { height: string }) => mergeStyleSets({\r\n    wrapper: {\r\n        height: props.height,\r\n        position: 'relative',\r\n        backgroundColor: 'white',\r\n    },\r\n    filter: {\r\n        backgroundColor: 'white',\r\n        width: 300,\r\n    },\r\n    onDrag: {\r\n        backgroundColor: theme.palette.neutralLight\r\n    },\r\n    row: {\r\n        flex: '0 0 auto',\r\n    }\r\n});\r\n","import { ConstrainMode, ContextualMenu, ContextualMenuItemType, DetailsListLayoutMode, DetailsRow, DirectionalHint, IColumn, IColumnDragDropDetails, IconButton, IContextualMenuItem, IContextualMenuProps, IDetailsColumnProps, IDetailsColumnRenderTooltipProps, IDetailsFooterProps, IDetailsHeaderProps, IDetailsRowBaseProps, IRenderFunction, ITooltipHostStyles, ScrollablePane, ScrollbarVisibility, SearchBox, SelectionMode, ShimmeredDetailsList, Stack, Sticky, StickyPositionType, Text, TooltipHost } from \"@fluentui/react\";\r\nimport React from \"react\";\r\nimport { Helpers } from \"../../Helper/Helpers\";\r\nimport { VersionStatus } from \"../../Helper/Model\";\r\nimport { DataConnector } from \"../DataConnector/DataConnector\";\r\nimport { SolutionListProp } from \"../SolutionList/SolutionList\";\r\nimport { getClassNames } from \"./SolutionDetail.classNames\";\r\n\r\nconst calloutProps = { gapSpace: 0 };\r\nconst hostStyles: Partial<ITooltipHostStyles> = { root: { display: 'inline-block' } };\r\nconst refreshButtonStyles = { root: { verticalAlign: 'middle' } };\r\n\r\nexport interface SolutionDetailProp extends SolutionListProp {\r\n    Name: string;\r\n}\r\n\r\ninterface SolRow { version: string, displayName: string, connectionUrl: string, connectionId: string, logicalName: string, modifiedOn: Date, referenceEntity: string }\r\n\r\ninterface SolutionListState {\r\n    rows: SolutionDetailForNConnections[];\r\n    isLoading: boolean;\r\n    columns: IColumn[];\r\n    allItems: SolutionDetailForNConnections[];\r\n    allRows: SolRow[];\r\n    contextualMenuProps?: IContextualMenuProps;\r\n}\r\n\r\ntype SolutionDetailInfoForConnection = `${any}.com`;\r\n\r\ninterface SolutionDetailForNConnections {\r\n    logicalName: string;\r\n    displayName: string;\r\n    referenceEntity: string\r\n    [prop: SolutionDetailInfoForConnection]: {\r\n        url: string;\r\n        version: string;\r\n        modifiedOn: Date;\r\n        id: string;\r\n        status: VersionStatus;\r\n    }\r\n}\r\n\r\nexport class SolutionDetail extends React.Component<SolutionDetailProp, SolutionListState> {\r\n    controller = new AbortController()\r\n    signal = this.controller.signal\r\n    connector = new DataConnector(this.signal);\r\n    classNames = getClassNames({ height: \"75vh\" });\r\n\r\n    constructor(prop: SolutionDetailProp) {\r\n        super(prop);\r\n        this.state = {\r\n            rows: [],\r\n            isLoading: false,\r\n            columns: [],\r\n            allItems: [],\r\n            allRows: []\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const { rows, isLoading, columns, contextualMenuProps } = this.state;\r\n        return (\r\n            <div className={this.classNames.wrapper}>\r\n                <ScrollablePane scrollbarVisibility={ScrollbarVisibility.auto}>\r\n                    <Sticky stickyPosition={StickyPositionType.Header}>\r\n                        <Stack horizontal horizontalAlign=\"space-between\" style={{ alignItems: 'center', paddingLeft: '10px' }}>\r\n                            <Stack horizontal horizontalAlign=\"start\" verticalAlign=\"center\" tokens={{ childrenGap: 20 }}>\r\n                                <SearchBox\r\n                                    className={this.classNames.filter}\r\n                                    placeholder=\"Cerca\"\r\n                                    onChange={this.onFilterChange}\r\n                                />\r\n                                {!isLoading &&\r\n                                    <TooltipHost\r\n                                        content=\"Ricarica\"\r\n                                        id={Helpers.GetUUID()}\r\n                                        calloutProps={calloutProps}\r\n                                        styles={hostStyles}\r\n                                    >\r\n                                        <IconButton\r\n                                            styles={refreshButtonStyles}\r\n                                            className='refresh'\r\n                                            iconProps={{ iconName: 'Refresh' }}\r\n                                            onClick={this.onReloadClick.bind(this)}\r\n                                        />\r\n                                    </TooltipHost>\r\n                                }\r\n                                <Text variant=\"mediumPlus\" >Soluzione selezionata: {this.props.Name}</Text>\r\n                            </Stack>\r\n                        </Stack>\r\n                    </Sticky>\r\n                    <ShimmeredDetailsList\r\n                        items={rows}\r\n                        columns={columns}\r\n                        setKey=\"set\"\r\n                        onRenderItemColumn={this.onRenderItemColumn}\r\n                        onRenderDetailsHeader={onRenderDetailsHeader}\r\n                        layoutMode={DetailsListLayoutMode.fixedColumns}\r\n                        constrainMode={ConstrainMode.unconstrained}\r\n                        enableShimmer={isLoading}\r\n                        selectionMode={SelectionMode.none}\r\n                        onColumnHeaderClick={this.onColumnClick}\r\n                        columnReorderOptions={{ frozenColumnCountFromStart: 2, onColumnDrop: this._handleColumnReorder.bind(this) }}\r\n                    />\r\n                    {contextualMenuProps && <ContextualMenu {...contextualMenuProps} />}\r\n                </ScrollablePane>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.load();\r\n    }\r\n\r\n    componentDidUpdate(prevProps: SolutionDetailProp) {\r\n        if (!Helpers.objectsEqual(prevProps, this.props)) {\r\n            this.reloadConnector();\r\n            this.load();\r\n        }\r\n    }\r\n\r\n    reloadConnector() {\r\n        this.controller.abort();\r\n        this.controller = new AbortController()\r\n        this.signal = this.controller.signal\r\n        this.connector = new DataConnector(this.signal);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.controller.abort();\r\n    }\r\n\r\n\r\n    async load() {\r\n        this.setState({ isLoading: true });\r\n        const others = [{ colName: \"Tipo\", order: 0, id: \"logicalName\" }, { colName: \"Nome\", order: 1, id: \"displayName\" }];\r\n        const colsOrder = others.concat(this.props.connectionStrings.map((e, i) => {\r\n            return {\r\n                colName: `${e.OrganizationUrl.replace(\".com\", \"\")}.com`, order: i + 2, id: Helpers.trimCurlyBraces(e.Id).toLowerCase()\r\n            }\r\n        }));\r\n\r\n        const cols: IColumn[] = colsOrder.map(a => {\r\n            return {\r\n                key: a.id,\r\n                name: a.colName,\r\n                minWidth: 210,\r\n                data: {\r\n                    isCompareFrom: a.order === 2,\r\n                    filters: {\r\n                        contains: false,\r\n                        notcontains: false\r\n                    }\r\n                },\r\n                onRenderHeader: this.onRenderHeader,\r\n                onColumnClick: this.onColumnClick,\r\n                isResizable: true,\r\n            }\r\n        });\r\n\r\n        this.setState({ columns: cols });\r\n\r\n        const data = await this.connector.GetSolutionDetailsForConnectionStrings({\r\n            ConnectionStrings: this.props.connectionStrings.map(e => {\r\n                return {\r\n                    Id: e.Id, Url: e.OrganizationUrl, Client: e.ClientId, Secret: e.Secret\r\n                }\r\n            }), Name: this.props.Name\r\n        });\r\n        if (data) {\r\n            let allSolutions: SolRow[] = [];\r\n            data.forEach(e => {\r\n                allSolutions = allSolutions.concat(e.SolutionDetails.map(a => {\r\n                    return {\r\n                        version: a.Version,\r\n                        displayName: a.DisplayName,\r\n                        connectionUrl: e.Url,\r\n                        modifiedOn: a.ModifiedOn,\r\n                        connectionId: e.ConnectionStringId,\r\n                        logicalName: a.LogicalName,\r\n                        referenceEntity: a.EntityReference\r\n                    }\r\n                }))\r\n            });\r\n            const orderedByProps = this.mapItems(allSolutions, cols);\r\n            this.setState({ rows: orderedByProps, allItems: orderedByProps, allRows: allSolutions });\r\n        }\r\n        this.setState({ isLoading: this.signal ? false : true });\r\n    }\r\n\r\n\r\n    _handleColumnReorder = (dragDropDetails: IColumnDragDropDetails) => {\r\n        const draggedIndex = dragDropDetails.draggedIndex;\r\n        const targetIndex = dragDropDetails.targetIndex;\r\n        const draggedItems = this.state.columns[draggedIndex];\r\n        const newColumns: IColumn[] = [...this.state.columns];\r\n\r\n        // insert before the dropped item\r\n        newColumns.splice(draggedIndex, 1);\r\n        newColumns.splice(targetIndex, 0, draggedItems);\r\n        this.setState({ columns: newColumns });\r\n    };\r\n\r\n    mapItems(allSolutions: SolRow[], cols: IColumn[]) {\r\n        const groupedBySolution = Helpers.groupBy(allSolutions, (e) => e.displayName?.toLowerCase());\r\n        const items: SolutionDetailForNConnections[] = [];\r\n        const defaultCompare = cols.find(e => e.data?.isCompareFrom);\r\n        for (const uniqueName of groupedBySolution.keys()) {\r\n            const elems = groupedBySolution.get(uniqueName);\r\n            if (elems) {\r\n                const item: SolutionDetailForNConnections = {\r\n                    logicalName: elems[0].logicalName,\r\n                    displayName: uniqueName,\r\n                    referenceEntity: elems[0].referenceEntity\r\n                }\r\n                let versionVal: string;\r\n                let id: string;\r\n                if (defaultCompare) {\r\n                    id = defaultCompare.key;\r\n                    const compareElem = elems.find(e => e.connectionId === id);\r\n                    if (compareElem) {\r\n                        versionVal = compareElem.version;\r\n                    }\r\n                }\r\n                elems.forEach(e => {\r\n                    item[`${e.connectionUrl.replace(\".com\", \"\")}.com`] = { id: e.connectionId, url: e.connectionUrl, version: e.version, modifiedOn: new Date(e.modifiedOn), status: this.getStatus(e, versionVal, id) };\r\n                });\r\n                items.push(item);\r\n            }\r\n        }\r\n        const orderedByProps = items.sort((a, b) => {\r\n            const numberOfA = Object.keys(a).length;\r\n            const numberOfB = Object.keys(b).length;\r\n            return (numberOfA > numberOfB) ? -1 : 1;\r\n        });\r\n        return orderedByProps;\r\n    }\r\n\r\n    getStatus(elem: {\r\n        version: string;\r\n        displayName: string;\r\n        connectionUrl: string;\r\n        connectionId: string;\r\n        logicalName: string;\r\n        modifiedOn: Date;\r\n    }, compareVal?: string, compareId?: string) {\r\n        if (compareId && compareVal) {\r\n            if (elem.connectionId === compareId) {\r\n                return VersionStatus.Default\r\n            } else\r\n                return elem.version === compareVal ? VersionStatus.Equal : (elem.version > compareVal ? VersionStatus.Above : VersionStatus.Under);\r\n        }\r\n        return VersionStatus.Default;\r\n    }\r\n\r\n    onFilterChange = (_ev?: React.FormEvent<HTMLElement>, text?: string) => {\r\n        const elems = this.state.allItems;\r\n        Helpers.StringIsNotNullOrEmpty(text) ? this.setState({ rows: elems.filter((item) => this.hasText(item, text as string)) }) : this.setState({ rows: elems });\r\n\r\n    }\r\n\r\n    hasText = (item: any, text: string): boolean => {\r\n        const stringed = Object.keys(item).map(prop => item[prop] !== null && item[prop] !== undefined ? item[prop].toString().toLowerCase() : \"\").join('|');\r\n        return stringed.indexOf(text.toLowerCase()) > -1;\r\n    }\r\n\r\n    onColumnClick = (ev?: React.MouseEvent<HTMLElement>, column?: IColumn) => {\r\n        if (column && ev && !this.state.isLoading) {\r\n            const prop = this.getContextualMenuProps(ev, column);\r\n            this.setState({ contextualMenuProps: prop })\r\n        }\r\n    }\r\n\r\n    getContextualMenuProps = (ev: React.MouseEvent<HTMLElement>, column: IColumn): IContextualMenuProps => {\r\n        const menuItems: IContextualMenuItem[] = [];\r\n        if (!column.name.toLowerCase().includes(\"com\")) {\r\n            menuItems.push({\r\n                key: 'aToZ',\r\n                name: \"Sort A to Z\",\r\n                iconProps: { iconName: 'SortUp' },\r\n                canCheck: true,\r\n                checked: column.isSorted && !column.isSortedDescending,\r\n                onClick: () => {\r\n                    this.onSort(column, false);\r\n                    this.onContextualMenuDismissed()\r\n                },\r\n            });\r\n\r\n            menuItems.push({\r\n                key: 'zToA',\r\n                name: \"Sort Z to A\",\r\n                iconProps: { iconName: 'SortDown' },\r\n                canCheck: true,\r\n                checked: column.isSorted && column.isSortedDescending,\r\n                onClick: () => {\r\n                    this.onSort(column, true);\r\n                    this.onContextualMenuDismissed()\r\n                },\r\n            });\r\n        } else {\r\n            menuItems.push({\r\n                key: 'compare',\r\n                name: \"Compare From\",\r\n                iconProps: { iconName: 'Compare' },\r\n                canCheck: true,\r\n                checked: column.data?.isCompareFrom,\r\n                disabled: column.data?.isCompareFrom,\r\n                onClick: () => {\r\n                    this.onToggleSelect(column.key, !column.data?.isCompareFrom);\r\n                    this.onContextualMenuDismissed()\r\n                },\r\n            });\r\n            menuItems.push({\r\n                key: 'divider_1',\r\n                itemType: ContextualMenuItemType.Divider,\r\n            });\r\n            menuItems.push({\r\n                key: 'contains',\r\n                name: \"Contains Data\",\r\n                iconProps: { iconName: 'Filter' },\r\n                canCheck: true,\r\n                checked: column.data?.filters.contains,\r\n                onClick: () => {\r\n                    this.onFilterSelect(column, 'contains', !column.data?.filters.contains);\r\n                    this.onContextualMenuDismissed()\r\n                },\r\n            });\r\n            menuItems.push({\r\n                key: 'notcontains',\r\n                name: \"Does not Contains Data\",\r\n                iconProps: { iconName: 'Filter' },\r\n                canCheck: true,\r\n                checked: column.data?.filters.notcontains,\r\n                onClick: () => {\r\n                    this.onFilterSelect(column, 'notcontains', !column.data?.filters.notcontains);\r\n                    this.onContextualMenuDismissed()\r\n                },\r\n            });\r\n        }\r\n\r\n        return {\r\n            items: menuItems,\r\n            target: ev.currentTarget as HTMLElement,\r\n            directionalHint: DirectionalHint.bottomLeftEdge,\r\n            gapSpace: 10,\r\n            isBeakVisible: false,\r\n            onDismiss: this.onContextualMenuDismissed,\r\n        };\r\n    }\r\n\r\n    onToggleSelect = (key: string, selected: boolean) => {\r\n        const { columns, allRows } = this.state;\r\n        columns.forEach(e => { e.data.isCompareFrom = false });\r\n        const interestedCol = columns.find(e => e.key === key);\r\n        if (interestedCol && selected) {\r\n            interestedCol.data.isCompareFrom = selected;\r\n        }\r\n        else {\r\n            const defaultCompare = columns.find(e => e.key === this.props.connectionStrings?.[0]?.Id);\r\n            if (defaultCompare) {\r\n                defaultCompare.data.isCompareFrom = true;\r\n            }\r\n        }\r\n        const data = this.mapItems(allRows, columns);\r\n        this.setState({ columns: columns, allItems: data, rows: data });\r\n    }\r\n\r\n    onFilterSelect = (column: IColumn, filterKey: string, isCheck: boolean) => {\r\n        const { columns, allRows } = this.state;\r\n        columns.filter(e => e.data?.filters).forEach(a => Object.keys(a.data.filters).forEach(e => a.data.filters[e] = false));\r\n        const interestedCol = columns.find(e => e.key === column.key);\r\n        let newAllRows = allRows;\r\n        if (interestedCol) {\r\n            Object.keys(interestedCol.data.filters).forEach(e => interestedCol.data.filters[e] = false);\r\n            interestedCol.data.filters[filterKey] = isCheck;\r\n            if (isCheck) {\r\n                const groupedBySolution = Helpers.groupBy(allRows, (e) => e.displayName?.toLowerCase());\r\n                for (const uniqueName of groupedBySolution.entries()) {\r\n                    if (uniqueName[1]) {\r\n                        let contains: SolRow | undefined;\r\n                        switch (filterKey) {\r\n                            case 'notcontains':\r\n                                contains = uniqueName[1].find(e => e.connectionId === column.key);\r\n                                if (contains) {\r\n                                    groupedBySolution.delete(uniqueName[0]);\r\n                                }\r\n                                break;\r\n                            case 'contains':\r\n                                contains = uniqueName[1].find(e => e.connectionId === column.key);\r\n                                if (!contains) {\r\n                                    groupedBySolution.delete(uniqueName[0]);\r\n                                }\r\n                                break;\r\n                            default:\r\n                                break;\r\n                        }\r\n                    }\r\n                }\r\n                newAllRows = [];\r\n                for (const uniqueName of groupedBySolution.entries()) {\r\n                    newAllRows = newAllRows.concat(uniqueName[1]);\r\n                }\r\n            }\r\n        }\r\n\r\n        const data = this.mapItems(newAllRows, columns);\r\n        const groupedByConnection = Helpers.groupBy(newAllRows, (e) => e.connectionId);\r\n        columns.forEach(e => {\r\n            const foundGroup = groupedByConnection.has(e.key);\r\n            if (foundGroup) {\r\n                e.data.count = groupedByConnection.get(e.key)?.length;\r\n            }\r\n        })\r\n        this.setState({ columns: columns, allItems: data, rows: data });\r\n    }\r\n\r\n\r\n    onContextualMenuDismissed = () => {\r\n        this.setState({ contextualMenuProps: undefined })\r\n    }\r\n\r\n    onSort = (column: IColumn, isDescending: boolean): void => {\r\n        const { columns, rows } = this.state;\r\n        const newColumns: IColumn[] = columns.slice();\r\n        const currColumn = newColumns.find(e => e.key === column.key);\r\n        if (currColumn) {\r\n            newColumns.forEach((newCol: IColumn) => {\r\n                if (newCol === currColumn) {\r\n                    currColumn.isSortedDescending = isDescending;\r\n                    currColumn.isSorted = true;\r\n                } else {\r\n                    newCol.isSorted = false;\r\n                    newCol.isSortedDescending = true;\r\n                }\r\n            });\r\n            // Sort the items.\r\n            const newRows = Helpers.copyAndSort(rows, column.key!, isDescending);\r\n\r\n            // Reset the items and columns to match the state.\r\n            this.setState({\r\n                rows: newRows,\r\n                columns: newColumns\r\n            });\r\n        }\r\n    };\r\n\r\n    onReloadClick = () => {\r\n        this.setState({ rows: [] });\r\n        this.load();\r\n    };\r\n\r\n    onRenderHeader: IRenderFunction<IDetailsColumnProps> = (props, defaultRender) => {\r\n        if (props && defaultRender) {\r\n            return (\r\n                <Stack horizontal tokens={{ childrenGap: 5 }} verticalAlign=\"center\">\r\n                    <Text variant=\"smallPlus\">{props.column.name ?? props.column.fieldName}</Text>\r\n                    <IconButton iconProps={{ iconName: \"ChevronDown\" }}></IconButton>\r\n                    {props.column.data?.isCompareFrom && <IconButton iconProps={{ iconName: \"Compare\" }}></IconButton>}\r\n                </Stack>\r\n            );\r\n        }\r\n        return null;\r\n    }\r\n\r\n    onRenderItemColumn = (item: any, _index?: number, column?: IColumn): JSX.Element | string | number => {\r\n        let result = \"---\";\r\n        if (column && column.name) {\r\n            const el = item[column.name] ?? item[column.key];\r\n            if (el && typeof (el) === \"object\") {\r\n                let color = \"\";\r\n                const status = el.status;\r\n                if (status)\r\n                    switch (Number(el.status) as VersionStatus) {\r\n                        case VersionStatus.Equal.valueOf():\r\n                            color = \"green\";\r\n                            break;\r\n                        case VersionStatus.Under.valueOf():\r\n                            color = \"red\";\r\n                            break;\r\n                        case VersionStatus.Above.valueOf():\r\n                            color = \"gold\";\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                const rend = (\r\n                    <Stack>\r\n                        <Stack horizontal horizontalAlign=\"space-between\">\r\n                            <Text variant=\"medium\">{\"Versione:\"}</Text>\r\n                            <Text variant=\"medium\" style={{ color: color }}>{el.version}</Text>\r\n                        </Stack>\r\n                        <Stack horizontal horizontalAlign=\"space-between\">\r\n                            <Text variant=\"medium\">{\"Ultima modifica:\"}</Text>\r\n                            <Text variant=\"medium\">{el.modifiedOn?.toLocaleString() ?? ''}</Text>\r\n                        </Stack>\r\n                    </Stack>);\r\n                return rend;\r\n            }\r\n            else if (el)\r\n                result = el;\r\n        }\r\n        return <Text variant=\"medium\">{result}</Text>;\r\n    };\r\n\r\n    onRenderDetailsFooter: IRenderFunction<IDetailsFooterProps> = (props, _defaultRender) => {\r\n        if (!props) {\r\n            return null;\r\n        }\r\n        return (\r\n            <Sticky stickyPosition={StickyPositionType.Footer} isScrollSynced>\r\n                <div className={this.classNames.row}>\r\n                    <DetailsRow\r\n                        columns={props.columns}\r\n                        item={{}}\r\n                        itemIndex={-1}\r\n                        selection={props.selection}\r\n                        selectionMode={(props.selection && props.selection.mode) || SelectionMode.none}\r\n                        rowWidth={props.rowWidth}\r\n                        onRenderItemColumn={this._renderDetailsFooterItemColumn}\r\n                    />\r\n                </div>\r\n            </Sticky>\r\n        );\r\n    };\r\n    _renderDetailsFooterItemColumn: IDetailsRowBaseProps['onRenderItemColumn'] = (_item, _index, column) => {\r\n        if (column) {\r\n            return (\r\n                <div>\r\n                    <b>{column.data.count}</b>\r\n                </div>\r\n            );\r\n        }\r\n        return undefined;\r\n    };\r\n\r\n}\r\n\r\nconst onRenderDetailsHeader: IRenderFunction<IDetailsHeaderProps> = (props, defaultRender) => {\r\n    if (!props) {\r\n        return null;\r\n    }\r\n    const onRenderColumnHeaderTooltip: IRenderFunction<IDetailsColumnRenderTooltipProps> = tooltipHostProps => (\r\n        <TooltipHost {...tooltipHostProps} />\r\n    );\r\n    return (\r\n        <Sticky stickyPosition={StickyPositionType.Header} isScrollSynced>\r\n            {defaultRender!({\r\n                ...props,\r\n                onRenderColumnHeaderTooltip,\r\n            })}\r\n        </Sticky>\r\n    );\r\n};","import { mergeStyleSets } from '@fluentui/merge-styles';\r\nimport { getTheme } from '@fluentui/react';\r\n\r\n\r\nconst theme = getTheme();\r\n\r\nexport const getClassNames = (props: { height: string }) => mergeStyleSets({\r\n    wrapper: {\r\n        height: props.height,\r\n        position: 'relative',\r\n        backgroundColor: 'white',\r\n    },\r\n    filter: {\r\n        backgroundColor: 'white',\r\n        width: 300,\r\n    },\r\n    onDrag: {\r\n        backgroundColor: theme.palette.neutralLight\r\n    },\r\n    callout: {\r\n        width: 250,\r\n        maxWidth: '90%',\r\n        padding: '5px 6px',\r\n    },\r\n    commandBar: {\r\n        height: 30\r\n    }\r\n});\r\n","import { ConstrainMode, DetailsListLayoutMode, IColumn, IconButton, Selection, IDetailsColumnRenderTooltipProps, IDetailsHeaderProps, IRenderFunction, ITooltipHostStyles, ScrollablePane, ScrollbarVisibility, SearchBox, SelectionMode, ShimmeredDetailsList, Stack, Sticky, StickyPositionType, TooltipHost, Text, ContextualMenu, IContextualMenuProps, DirectionalHint, IContextualMenuItem, IDetailsColumnProps, IColumnDragDropDetails, DefaultButton, Panel, PanelType, } from \"@fluentui/react\";\r\nimport React from \"react\";\r\nimport { Helpers } from \"../../Helper/Helpers\";\r\nimport { ListHelpers } from \"../../Helper/ListHelpers\";\r\nimport { VersionStatus, XrmConnectionString } from \"../../Helper/Model\";\r\nimport { DataConnector } from \"../DataConnector/DataConnector\";\r\nimport { SolutionDetail } from \"../SolutionDetail/SolutionDetail\";\r\nimport { ViewSelection } from \"../ViewSelection\";\r\nimport { getClassNames } from \"./SolutionList.classNames\";\r\n\r\n\r\nexport interface SolutionListProp {\r\n    connectionStrings: XrmConnectionString[];\r\n}\r\ninterface Row { version: string, solutionName: string, connectionUrl: string, connectionId: string, modifiedOn: Date }\r\n\r\ninterface SolutionListState {\r\n    rows: SolutionForNConnections[];\r\n    isLoading: boolean;\r\n    columns: IColumn[];\r\n    allItems: SolutionForNConnections[];\r\n    selected?: string;\r\n    selectedToPass?: string;\r\n    allRows: Row[];\r\n    contextualMenuProps?: IContextualMenuProps;\r\n    isOpen: boolean;\r\n    numberOfRows?: number;\r\n}\r\ntype SolutionInfoForConnection = `${any}.com`;\r\n\r\ninterface SolutionForNConnections {\r\n    key: string;\r\n    solutionName: string;\r\n    [prop: SolutionInfoForConnection]: {\r\n        url: string;\r\n        version: string;\r\n        id: string\r\n        status: VersionStatus;\r\n        modifiedOn: Date;\r\n    }\r\n}\r\n\r\nconst calloutProps = { gapSpace: 0 };\r\nconst hostStyles: Partial<ITooltipHostStyles> = { root: { display: 'inline-block' } };\r\nconst refreshButtonStyles = { root: { verticalAlign: 'middle' } };\r\n\r\n\r\nexport class SolutionList extends React.Component<SolutionListProp, SolutionListState> {\r\n    controller = new AbortController()\r\n    signal = this.controller.signal\r\n    connector = new DataConnector(this.signal);\r\n    classNames = getClassNames({ height: \"85vh\" });\r\n    _selection: Selection;\r\n    firstsColNames = [{ colName: \"Soluzioni\", order: 0, id: \"solutionName\" }];\r\n\r\n    constructor(prop: SolutionListProp) {\r\n        super(prop);\r\n        this.state = {\r\n            rows: [],\r\n            isLoading: false,\r\n            columns: [],\r\n            allItems: [],\r\n            allRows: [],\r\n            isOpen: false\r\n        };\r\n\r\n        this._selection = new Selection({ onSelectionChanged: () => this.getSelectionDetail() });\r\n    }\r\n\r\n    render() {\r\n        const { rows, isLoading, columns, contextualMenuProps, isOpen, selectedToPass, numberOfRows } = this.state;\r\n        return (\r\n            <Stack tokens={{ childrenGap: 20 }}>\r\n                {this.props.connectionStrings.length < 1 ? <Text variant=\"mediumPlus\">Seleziona una o più organizzazioni</Text> : <DefaultButton text=\"Soluzioni\" onClick={this.onPanelOpen.bind(this)} />}\r\n                <Panel\r\n                    headerText=\"Filtri\"\r\n                    isOpen={isOpen}\r\n                    onDismiss={this.dismissPanel.bind(this)}\r\n                    closeButtonAriaLabel=\"Close\"\r\n                    type={PanelType.large}\r\n                    isHiddenOnDismiss={true}\r\n                >\r\n                    <div className={this.classNames.wrapper}>\r\n                        <ScrollablePane scrollbarVisibility={ScrollbarVisibility.auto}>\r\n                            <Sticky stickyPosition={StickyPositionType.Header}>\r\n                                <Stack horizontal horizontalAlign=\"space-between\" style={{ alignItems: 'center', paddingLeft: '10px' }}>\r\n                                    <Stack horizontal horizontalAlign=\"start\" verticalAlign=\"center\" tokens={{ childrenGap: 20 }}>\r\n                                        <SearchBox\r\n                                            className={this.classNames.filter}\r\n                                            placeholder=\"Cerca\"\r\n                                            onChange={this.onFilterChange}\r\n                                        />\r\n                                        {!isLoading &&\r\n                                            <TooltipHost\r\n                                                content=\"Ricarica\"\r\n                                                id={Helpers.GetUUID()}\r\n                                                calloutProps={calloutProps}\r\n                                                styles={hostStyles}\r\n                                            >\r\n                                                <IconButton\r\n                                                    styles={refreshButtonStyles}\r\n                                                    className='refresh'\r\n                                                    iconProps={{ iconName: 'Refresh' }}\r\n                                                    onClick={this.onReloadClick.bind(this)}\r\n                                                />\r\n                                            </TooltipHost>\r\n                                        }\r\n                                        {!isLoading && rows.length > 0 && <DefaultButton text=\"Excel export\" onClick={this.handleExport.bind(this)} />}\r\n                                        {numberOfRows ? <Text variant=\"mediumPlus\">{numberOfRows} Soluzioni  {this.state.selected ? ' ' + this.state.selected + ' selezionata' : ', seleziona una soluzione'}</Text> : this.props.connectionStrings.length > 0 ? <Text variant=\"mediumPlus\">0 Soluzioni trovate</Text> : <Text variant=\"mediumPlus\">Seleziona una o più organizzazioni</Text>}\r\n                                    </Stack>\r\n                                </Stack>\r\n                            </Sticky>\r\n\r\n                            <ViewSelection selection={this._selection} items={rows} >\r\n                                <ShimmeredDetailsList\r\n                                    items={rows}\r\n                                    columns={columns}\r\n                                    setKey=\"set\"\r\n                                    onRenderItemColumn={this.onRenderItemColumn}\r\n                                    onRenderDetailsHeader={onRenderDetailsHeader}\r\n                                    layoutMode={DetailsListLayoutMode.fixedColumns}\r\n                                    constrainMode={ConstrainMode.unconstrained}\r\n                                    enableShimmer={isLoading}\r\n                                    selectionMode={SelectionMode.single}\r\n                                    selection={this._selection}\r\n                                    // onColumnHeaderClick={this.onColumRenderClick.bind(this)}\r\n                                    columnReorderOptions={{ frozenColumnCountFromStart: 1, onColumnDrop: this._handleColumnReorder.bind(this) }}\r\n                                    selectionPreservedOnEmptyClick={true}\r\n                                />\r\n                            </ViewSelection>\r\n                            {contextualMenuProps && <ContextualMenu {...contextualMenuProps} />}\r\n                        </ScrollablePane>\r\n                    </div>\r\n                </Panel>\r\n                {selectedToPass && <SolutionDetail {...{ Name: selectedToPass, ...this.props }} />}\r\n            </Stack>\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        // this.load();\r\n    }\r\n\r\n    componentDidUpdate(prevProps: SolutionListProp) {\r\n        if (!Helpers.arraysEqual(prevProps.connectionStrings, this.props.connectionStrings)) {\r\n            this.setState({ selectedToPass: undefined, selected: undefined });\r\n            this.reloadConnector();\r\n            this.load();\r\n        }\r\n    }\r\n\r\n    reloadConnector() {\r\n        this.controller.abort();\r\n        this.controller = new AbortController()\r\n        this.signal = this.controller.signal\r\n        this.connector = new DataConnector(this.signal);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.controller.abort();\r\n    }\r\n\r\n    onPanelOpen(_ev: any) {\r\n        this.setState({ isOpen: true });\r\n    }\r\n\r\n    dismissPanel() {\r\n        this.setState({ isOpen: false, selectedToPass: this.state.selected });\r\n    }\r\n\r\n    handleExport(_ev: any) {\r\n\r\n        const fileName = \"CompareEnvironments\" + new Date().toLocaleString().split(' ').join('_');\r\n        const sheetProps = {\r\n            Title: \"Compare Environments\",\r\n            Subject: \"Solutions\",\r\n            CreatedDate: new Date()\r\n        };\r\n\r\n        const firstRow: { key: string, label: string }[] = this.firstsColNames.map(e => { return { key: e.id, label: e.colName } });\r\n\r\n        const transform = (el: {\r\n            url: string;\r\n            version: string;\r\n            id: string\r\n            status: VersionStatus;\r\n            modifiedOn: Date;\r\n        } | undefined) => {\r\n            let toPut: any = '---';\r\n            if (el && typeof (el) === \"object\") {\r\n                toPut = el.version;\r\n            }\r\n            return toPut;\r\n        }\r\n\r\n        ListHelpers.exportList(firstRow, this.props.connectionStrings.map(e => e.OrganizationUrl), this.state.rows, sheetProps, fileName, transform);\r\n    }\r\n\r\n    async load() {\r\n        this.setState({ isLoading: true });\r\n        this._selection.setAllSelected(false);\r\n\r\n        const colsOrder = this.firstsColNames.concat(this.props.connectionStrings.map((e, i) => {\r\n            return {\r\n                colName: `${e.OrganizationUrl.replace(\".com\", \"\")}.com`,\r\n                order: i + 1,\r\n                id: Helpers.trimCurlyBraces(e.Id).toLowerCase()\r\n            }\r\n        }));\r\n\r\n        const cols: IColumn[] = colsOrder.map(a => {\r\n            return {\r\n                key: a.id,\r\n                name: a.colName,\r\n                minWidth: 210,\r\n                data: { isCompareFrom: a.order === 1 },\r\n                onRenderHeader: this.onRenderHeader,\r\n                onColumnClick: this.onColumnClick,\r\n                isResizable: true,\r\n            }\r\n        });\r\n\r\n        this.setState({ columns: cols });\r\n\r\n        const data = await this.connector.GetSolutionsForConnectionStrings({\r\n            ConnectionStrings: this.props.connectionStrings.map(e => {\r\n                return {\r\n                    Id: e.Id, Url: e.OrganizationUrl, Client: e.ClientId, Secret: e.Secret\r\n                }\r\n            })\r\n        });\r\n        if (data) {\r\n            let allSolutions: Row[] = [];\r\n            data.forEach(e => {\r\n                allSolutions = allSolutions.concat(e.Solutions.map(a => {\r\n                    return {\r\n                        version: a.Version,\r\n                        solutionName: a.UniqueName,\r\n                        connectionUrl: e.Url,\r\n                        connectionId: e.ConnectionStringId,\r\n                        modifiedOn: a.ModifiedOn\r\n                    }\r\n                }))\r\n            });\r\n            const orderedByProps = this.mapItems(allSolutions, cols);\r\n            const count = orderedByProps.length;\r\n            this.setState({ rows: orderedByProps, allItems: orderedByProps, allRows: allSolutions, numberOfRows: count });\r\n        }\r\n        this.setState({ isLoading: this.signal ? false : true });\r\n    }\r\n\r\n\r\n    _handleColumnReorder = (dragDropDetails: IColumnDragDropDetails) => {\r\n        const draggedIndex = dragDropDetails.draggedIndex;\r\n        const targetIndex = dragDropDetails.targetIndex;\r\n        const draggedItems = this.state.columns[draggedIndex];\r\n        const newColumns: IColumn[] = [...this.state.columns];\r\n\r\n        // insert before the dropped item\r\n        newColumns.splice(draggedIndex, 1);\r\n        newColumns.splice(targetIndex, 0, draggedItems);\r\n        this.setState({ columns: newColumns });\r\n    };\r\n\r\n\r\n    mapItems(allSolutions: Row[], cols: IColumn[]) {\r\n        const groupedBySolution = Helpers.groupBy(allSolutions, (e) => e.solutionName.toLowerCase());\r\n        const items: SolutionForNConnections[] = [];\r\n        const defaultCompare = cols.find(e => e.data?.isCompareFrom);\r\n        for (const uniqueName of groupedBySolution.keys()) {\r\n            const elems = groupedBySolution.get(uniqueName);\r\n            if (elems) {\r\n                const item: SolutionForNConnections = {\r\n                    solutionName: uniqueName,\r\n                    key: uniqueName\r\n                }\r\n                let versionVal: string;\r\n                let id: string;\r\n                if (defaultCompare) {\r\n                    id = defaultCompare.key;\r\n                    const compareElem = elems.find(e => e.connectionId === id);\r\n                    if (compareElem) {\r\n                        versionVal = compareElem.version;\r\n                    }\r\n                }\r\n                elems.forEach(e => {\r\n                    item[`${e.connectionUrl.replace(\".com\", \"\")}.com`] = { id: e.connectionId, url: e.connectionUrl, version: e.version, modifiedOn: new Date(e.modifiedOn), status: this.getStatus(e, versionVal, id) };\r\n                });\r\n                items.push(item);\r\n            }\r\n        }\r\n        const orderedByProps = items.sort((a, b) => {\r\n            const numberOfA = Object.keys(a).length;\r\n            const numberOfB = Object.keys(b).length;\r\n            return (numberOfA > numberOfB) ? -1 : 1;\r\n        });\r\n        return orderedByProps;\r\n    }\r\n\r\n    onRenderHeader: IRenderFunction<IDetailsColumnProps> = (props, defaultRender) => {\r\n        if (props && defaultRender) {\r\n            return (\r\n                <Stack horizontal tokens={{ childrenGap: 5 }} verticalAlign=\"center\">\r\n                    <Text variant=\"medium\">{props.column.name ?? props.column.fieldName}</Text>\r\n                    <IconButton iconProps={{ iconName: \"ChevronDown\" }}></IconButton>\r\n                    {props.column.data?.isCompareFrom && <IconButton iconProps={{ iconName: \"Compare\" }}></IconButton>}\r\n                </Stack>\r\n            );\r\n        }\r\n        return null;\r\n    };\r\n\r\n    onColumnClick = (ev?: React.MouseEvent<HTMLElement>, column?: IColumn) => {\r\n        if (column && ev) {\r\n            const prop = this.getContextualMenuProps(ev, column);\r\n            this.setState({ contextualMenuProps: prop })\r\n        }\r\n    }\r\n\r\n    getContextualMenuProps = (ev: React.MouseEvent<HTMLElement>, column: IColumn): IContextualMenuProps => {\r\n        const menuItems: IContextualMenuItem[] = [];\r\n        if (!column.name.toLowerCase().includes(\"com\")) {\r\n            menuItems.push({\r\n                key: 'aToZ',\r\n                name: \"Sort A to Z\",\r\n                iconProps: { iconName: 'SortUp' },\r\n                canCheck: true,\r\n                checked: column.isSorted && !column.isSortedDescending,\r\n                onClick: () => {\r\n                    this.onSort(column, false);\r\n                    this.onContextualMenuDismissed()\r\n                },\r\n            });\r\n\r\n            menuItems.push({\r\n                key: 'zToA',\r\n                name: \"Sort Z to A\",\r\n                iconProps: { iconName: 'SortDown' },\r\n                canCheck: true,\r\n                checked: column.isSorted && column.isSortedDescending,\r\n                onClick: () => {\r\n                    this.onSort(column, true);\r\n                    this.onContextualMenuDismissed()\r\n                },\r\n            });\r\n        } else {\r\n            menuItems.push({\r\n                key: 'compare',\r\n                name: \"Compare From\",\r\n                iconProps: { iconName: 'Compare' },\r\n                canCheck: true,\r\n                checked: column.data?.isCompareFrom,\r\n                disabled: column.data?.isCompareFrom,\r\n                onClick: () => {\r\n                    this.onToggleSelect(column.key, !column.data?.isCompareFrom);\r\n                    this.onContextualMenuDismissed()\r\n                },\r\n            });\r\n        }\r\n\r\n        return {\r\n            items: menuItems,\r\n            target: ev.currentTarget as HTMLElement,\r\n            directionalHint: DirectionalHint.bottomLeftEdge,\r\n            gapSpace: 10,\r\n            isBeakVisible: false,\r\n            onDismiss: this.onContextualMenuDismissed,\r\n        };\r\n    }\r\n\r\n\r\n    onToggleSelect = (key: string, selected: boolean) => {\r\n        const { columns, allRows } = this.state;\r\n        columns.forEach(e => { e.data = { isCompareFrom: false } });\r\n        const interestedCol = columns.find(e => e.key === key);\r\n        if (interestedCol && selected) {\r\n            interestedCol.data = { isCompareFrom: selected };\r\n        }\r\n        else {\r\n            const defaultCompare = columns.find(e => e.key === this.props.connectionStrings?.[0]?.Id);\r\n            if (defaultCompare) {\r\n                defaultCompare.data = { isCompareFrom: true };\r\n            }\r\n        }\r\n        const data = this.mapItems(allRows, columns);\r\n        this.setState({ columns: columns, allItems: data, rows: data });\r\n    }\r\n\r\n    onContextualMenuDismissed = () => {\r\n        this.setState({ contextualMenuProps: undefined })\r\n    }\r\n\r\n    getSelectionDetail = () => {\r\n        const selected = this._selection.getSelection() as SolutionForNConnections[];\r\n        this.setState({ selected: selected[0]?.solutionName });\r\n    }\r\n\r\n    onFilterChange = (_ev?: React.FormEvent<HTMLElement>, text?: string) => {\r\n        const elems = this.state.allItems;\r\n        Helpers.StringIsNotNullOrEmpty(text) ? this.setState({ rows: elems.filter((item) => this.hasText(item, text as string)) }) : this.setState({ rows: elems });\r\n\r\n    }\r\n\r\n    hasText = (item: any, text: string): boolean => {\r\n        const stringed = Object.keys(item).map(prop => item[prop] !== null && item[prop] !== undefined ? item[prop].toString().toLowerCase() : \"\").join('|');\r\n        return stringed.indexOf(text.toLowerCase()) > -1;\r\n    }\r\n\r\n    onSort = (column: IColumn, isDescending: boolean): void => {\r\n        const { columns, rows } = this.state;\r\n        const newColumns: IColumn[] = columns.slice();\r\n        const currColumn = newColumns.find(e => e.key === column.key);\r\n        if (currColumn) {\r\n            newColumns.forEach((newCol: IColumn) => {\r\n                if (newCol === currColumn) {\r\n                    currColumn.isSortedDescending = isDescending;\r\n                    currColumn.isSorted = true;\r\n                } else {\r\n                    newCol.isSorted = false;\r\n                    newCol.isSortedDescending = true;\r\n                }\r\n            });\r\n            // Sort the items.\r\n            const newRows = Helpers.copyAndSort(rows, column.key!, isDescending);\r\n\r\n            // Reset the items and columns to match the state.\r\n            this.setState({\r\n                rows: newRows,\r\n                columns: newColumns\r\n            });\r\n        }\r\n    };\r\n\r\n\r\n    onReloadClick = () => {\r\n        this.setState({ rows: [] });\r\n        this.load();\r\n    };\r\n\r\n    getStatus(elem: {\r\n        version: string;\r\n        solutionName: string;\r\n        connectionUrl: string;\r\n        connectionId: string;\r\n    }, compareVal?: string, compareId?: string) {\r\n        if (compareId && compareVal) {\r\n            if (elem.connectionId === compareId) {\r\n                return VersionStatus.Default\r\n            } else {\r\n                const compare = Helpers.compareVer(elem.version, compareVal);\r\n                return compare === 0 ? VersionStatus.Equal : (compare === 1 ? VersionStatus.Above : VersionStatus.Under);\r\n            }\r\n        }\r\n        return VersionStatus.Default;\r\n    }\r\n\r\n    onRenderItemColumn = (item: any, _index?: number, column?: IColumn): JSX.Element | string | number => {\r\n        let result = \"---\";\r\n        let color = \"\";\r\n        if (column && column.name) {\r\n            const el = item[column.name] ?? item[column.key];\r\n            if (el && typeof (el) === \"object\") {\r\n                result = el.version;\r\n                const status = el.status;\r\n                if (status)\r\n                    switch (Number(el.status) as VersionStatus) {\r\n                        case VersionStatus.Equal.valueOf():\r\n                            color = \"green\";\r\n                            break;\r\n                        case VersionStatus.Under.valueOf():\r\n                            color = \"red\";\r\n                            break;\r\n                        case VersionStatus.Above.valueOf():\r\n                            color = \"gold\";\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                const rend = (\r\n                    <Stack>\r\n                        <Stack horizontal horizontalAlign=\"space-between\">\r\n                            <Text variant=\"medium\">{\"Versione:\"}</Text>\r\n                            <Text variant=\"medium\" style={{ color: color }}>{el.version}</Text>\r\n                        </Stack>\r\n                        <Stack horizontal horizontalAlign=\"space-between\">\r\n                            <Text variant=\"medium\">{\"Ultima modifica:\"}</Text>\r\n                            <Text variant=\"medium\">{el.modifiedOn?.toLocaleString() ?? ''}</Text>\r\n                        </Stack>\r\n                    </Stack>);\r\n                return rend;\r\n            }\r\n            else if (el)\r\n                result = el;\r\n        }\r\n        return <Text variant=\"medium\" style={{ color: color }}>{result}</Text>;\r\n    };\r\n\r\n}\r\n\r\nconst onRenderDetailsHeader: IRenderFunction<IDetailsHeaderProps> = (props, defaultRender) => {\r\n    if (!props) {\r\n        return null;\r\n    }\r\n    const onRenderColumnHeaderTooltip: IRenderFunction<IDetailsColumnRenderTooltipProps> = tooltipHostProps => (\r\n        <TooltipHost {...tooltipHostProps} />\r\n    );\r\n    return (\r\n        <Sticky stickyPosition={StickyPositionType.Header} isScrollSynced>\r\n            {defaultRender!({\r\n                ...props,\r\n                onRenderColumnHeaderTooltip,\r\n            })}\r\n        </Sticky>\r\n    );\r\n};","import { mergeStyleSets } from '@fluentui/merge-styles';\r\nimport { getTheme } from '@fluentui/react';\r\n\r\n\r\nconst theme = getTheme();\r\n\r\nexport const getClassNames = (props: { height: string }) => mergeStyleSets({\r\n    wrapper: {\r\n        height: props.height,\r\n        position: 'relative',\r\n        backgroundColor: 'white',\r\n    },\r\n    filter: {\r\n        backgroundColor: 'white',\r\n        width: 300,\r\n    },\r\n    onDrag: {\r\n        backgroundColor: theme.palette.neutralLight\r\n    },\r\n    callout: {\r\n        width: 250,\r\n        maxWidth: '90%',\r\n        padding: '5px 6px',\r\n    },\r\n    commandBar: {\r\n        height: 30\r\n    }\r\n});\r\n","import { ConstrainMode, DetailsListLayoutMode, IColumn, IconButton, Selection, IDetailsColumnRenderTooltipProps, IDetailsHeaderProps, IRenderFunction, ITooltipHostStyles, ScrollablePane, ScrollbarVisibility, SearchBox, SelectionMode, ShimmeredDetailsList, Stack, Sticky, StickyPositionType, TooltipHost, Text, ContextualMenu, IContextualMenuProps, DirectionalHint, IContextualMenuItem, IDetailsColumnProps, IColumnDragDropDetails, Panel, PanelType, DefaultButton, } from \"@fluentui/react\";\r\nimport React from \"react\";\r\nimport { Helpers } from \"../../Helper/Helpers\";\r\nimport { XrmConnectionString } from \"../../Helper/Model\";\r\nimport { SolutionCompare } from \"../CompareList/CompareList\";\r\nimport { DataConnector } from \"../DataConnector/DataConnector\";\r\nimport { ViewSelection } from \"../ViewSelection\";\r\nimport { getClassNames } from \"./SolutionPicker.classNames\";\r\n\r\n\r\nexport interface SolutionListProp {\r\n    connectionStrings: XrmConnectionString[];\r\n}\r\ninterface Row { key: string; version: string, solutionName: string, modifiedOn: Date }\r\n\r\ninterface SolutionListState {\r\n    rows: Row[];\r\n    isLoading: boolean;\r\n    columns: IColumn[];\r\n    allItems: Row[];\r\n    selected?: string[];\r\n    selectedToPass?: string[];\r\n    contextualMenuProps?: IContextualMenuProps;\r\n    numberOfRows?: number;\r\n    isOpen: boolean;\r\n}\r\n\r\nconst calloutProps = { gapSpace: 0 };\r\nconst hostStyles: Partial<ITooltipHostStyles> = { root: { display: 'inline-block' } };\r\nconst refreshButtonStyles = { root: { verticalAlign: 'middle' } };\r\n\r\n\r\nexport class SolutionPicker extends React.Component<SolutionListProp, SolutionListState> {\r\n    controller = new AbortController()\r\n    signal = this.controller.signal\r\n    connector = new DataConnector(this.signal);\r\n    classNames = getClassNames({ height: \"85vh\" });\r\n    _selection: Selection;\r\n\r\n    constructor(prop: SolutionListProp) {\r\n        super(prop);\r\n        this.state = {\r\n            rows: [],\r\n            isLoading: false,\r\n            columns: [],\r\n            allItems: [],\r\n            isOpen: false\r\n        };\r\n\r\n        this._selection = new Selection({ onSelectionChanged: () => this.getSelectionDetail() });\r\n    }\r\n\r\n    render() {\r\n        const { rows, isLoading, columns, contextualMenuProps, numberOfRows, isOpen, selectedToPass, selected } = this.state;\r\n        return (\r\n            <Stack tokens={{ childrenGap: 20 }}>\r\n                {this.props.connectionStrings.length < 1 ? <Text variant=\"mediumPlus\">Seleziona una organizzazione</Text> : <DefaultButton text=\"Soluzioni\" onClick={this.onPanelOpen.bind(this)} />}\r\n                <Panel\r\n                    headerText=\"Filtri\"\r\n                    isOpen={isOpen}\r\n                    onDismiss={this.dismissPanel.bind(this)}\r\n                    closeButtonAriaLabel=\"Close\"\r\n                    type={PanelType.large}\r\n                    isHiddenOnDismiss={true}\r\n                >\r\n                    <div className={this.classNames.wrapper}>\r\n                        <ScrollablePane scrollbarVisibility={ScrollbarVisibility.auto}>\r\n                            <Sticky stickyPosition={StickyPositionType.Header}>\r\n                                <Stack horizontal horizontalAlign=\"space-between\" style={{ alignItems: 'center', paddingLeft: '10px' }}>\r\n                                    <Stack horizontal horizontalAlign=\"start\" verticalAlign=\"center\" tokens={{ childrenGap: 20 }}>\r\n                                        <SearchBox\r\n                                            className={this.classNames.filter}\r\n                                            placeholder=\"Cerca\"\r\n                                            onChange={this.onFilterChange}\r\n                                        />\r\n                                        {!isLoading &&\r\n                                            <TooltipHost\r\n                                                content=\"Ricarica\"\r\n                                                id={Helpers.GetUUID()}\r\n                                                calloutProps={calloutProps}\r\n                                                styles={hostStyles}\r\n                                            >\r\n                                                <IconButton\r\n                                                    styles={refreshButtonStyles}\r\n                                                    className='refresh'\r\n                                                    iconProps={{ iconName: 'Refresh' }}\r\n                                                    onClick={this.onReloadClick.bind(this)}\r\n                                                />\r\n                                            </TooltipHost>\r\n                                        }\r\n                                        {numberOfRows ? <Text variant=\"mediumPlus\">{numberOfRows} Soluzioni trovate, seleziona una o più soluzioni</Text> : this.props.connectionStrings.length > 0 ? <Text variant=\"mediumPlus\">0 Soluzioni trovate</Text> : <Text variant=\"mediumPlus\">Seleziona una organizzazione</Text>}\r\n                                        {selected && <Text variant=\"mediumPlus\">{selected.length} Soluzioni selezionate</Text>}\r\n                                    </Stack>\r\n                                </Stack>\r\n                            </Sticky>\r\n                            <ViewSelection selection={this._selection} items={rows} >\r\n                                <ShimmeredDetailsList\r\n                                    items={rows}\r\n                                    columns={columns}\r\n                                    setKey=\"set\"\r\n                                    onRenderItemColumn={this.onRenderItemColumn}\r\n                                    onRenderDetailsHeader={onRenderDetailsHeader}\r\n                                    layoutMode={DetailsListLayoutMode.fixedColumns}\r\n                                    constrainMode={ConstrainMode.unconstrained}\r\n                                    enableShimmer={isLoading}\r\n                                    selectionMode={SelectionMode.multiple}\r\n                                    selection={this._selection}\r\n                                    // onColumnHeaderClick={this.onColumRenderClick.bind(this)}\r\n                                    // columnReorderOptions={{ frozenColumnCountFromStart: 1, onColumnDrop: this._handleColumnReorder.bind(this) }}\r\n                                    selectionPreservedOnEmptyClick={true}\r\n                                />\r\n                            </ViewSelection>\r\n                            {contextualMenuProps && <ContextualMenu {...contextualMenuProps} />}\r\n                        </ScrollablePane>\r\n                    </div>\r\n                </Panel>\r\n                {selectedToPass && selectedToPass.length > 0 && <SolutionCompare {...{ Names: selectedToPass, ...this.props }} />}\r\n            </Stack >\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        // this.load();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.controller.abort();\r\n    }\r\n\r\n    componentDidUpdate(prevProps: SolutionListProp) {\r\n        if (!Helpers.arraysEqual(prevProps.connectionStrings, this.props.connectionStrings)) {\r\n            this.setState({ selectedToPass: [], selected: [] });\r\n            this.reloadConnector();\r\n            this.load();\r\n        }\r\n    }\r\n\r\n    dismissPanel() {\r\n        this.setState({ isOpen: false, selectedToPass: this.state.selected });\r\n    }\r\n\r\n    onPanelOpen(_ev: any) {\r\n        this.setState({ isOpen: true });\r\n    }\r\n\r\n    reloadConnector() {\r\n        this.controller.abort();\r\n        this.controller = new AbortController()\r\n        this.signal = this.controller.signal\r\n        this.connector = new DataConnector(this.signal);\r\n    }\r\n\r\n    async load() {\r\n        this.setState({ isLoading: true });\r\n        this._selection.setAllSelected(false);\r\n\r\n        const others = [{ colName: \"Soluzioni\", order: 0, id: \"solutionName\" }, { colName: \"Versione\", order: 1, id: \"version\" }, { colName: \"Ultima modifica\", order: 2, id: \"modifiedOn\" }];\r\n\r\n        const cols: IColumn[] = others.map(a => {\r\n            return {\r\n                key: a.id,\r\n                name: a.colName,\r\n                minWidth: 210,\r\n                onRenderHeader: this.onRenderHeader,\r\n                onColumnClick: this.onColumnClick,\r\n                isResizable: true,\r\n            }\r\n        });\r\n\r\n        this.setState({ columns: cols });\r\n\r\n        const data = await this.connector.GetSolutionsForConnectionStrings({\r\n            ConnectionStrings: this.props.connectionStrings.map(e => {\r\n                return {\r\n                    Id: e.Id, Url: e.OrganizationUrl, Client: e.ClientId, Secret: e.Secret\r\n                }\r\n            })\r\n        });\r\n        if (data) {\r\n            let allSolutions: Row[] = [];\r\n            data.forEach(e => {\r\n                allSolutions = allSolutions.concat(e.Solutions.map(a => {\r\n                    return {\r\n                        version: a.Version,\r\n                        solutionName: a.UniqueName,\r\n                        modifiedOn: new Date(a.ModifiedOn),\r\n                        key: a.UniqueName\r\n                    }\r\n                }))\r\n            });\r\n            const count = allSolutions.length;\r\n            this.setState({ rows: allSolutions, allItems: allSolutions, numberOfRows: count });\r\n        }\r\n        this.setState({ isLoading: this.signal ? false : true });\r\n    }\r\n\r\n    _handleColumnReorder = (dragDropDetails: IColumnDragDropDetails) => {\r\n        const draggedIndex = dragDropDetails.draggedIndex;\r\n        const targetIndex = dragDropDetails.targetIndex;\r\n        const draggedItems = this.state.columns[draggedIndex];\r\n        const newColumns: IColumn[] = [...this.state.columns];\r\n\r\n        // insert before the dropped item\r\n        newColumns.splice(draggedIndex, 1);\r\n        newColumns.splice(targetIndex, 0, draggedItems);\r\n        this.setState({ columns: newColumns });\r\n    };\r\n\r\n    onRenderHeader: IRenderFunction<IDetailsColumnProps> = (props, defaultRender) => {\r\n        if (props && defaultRender) {\r\n            return (\r\n                <Stack horizontal tokens={{ childrenGap: 5 }} verticalAlign=\"center\">\r\n                    <Text variant=\"medium\">{props.column.name ?? props.column.fieldName}</Text>\r\n                    <IconButton iconProps={{ iconName: \"ChevronDown\" }}></IconButton>\r\n                </Stack>\r\n            );\r\n        }\r\n        return null;\r\n    };\r\n\r\n    onColumnClick = (ev?: React.MouseEvent<HTMLElement>, column?: IColumn) => {\r\n        if (column && ev) {\r\n            const prop = this.getContextualMenuProps(ev, column);\r\n            this.setState({ contextualMenuProps: prop })\r\n        }\r\n    }\r\n\r\n    getContextualMenuProps = (ev: React.MouseEvent<HTMLElement>, column: IColumn): IContextualMenuProps => {\r\n        const menuItems: IContextualMenuItem[] = [];\r\n        menuItems.push({\r\n            key: 'aToZ',\r\n            name: \"Sort A to Z\",\r\n            iconProps: { iconName: 'SortUp' },\r\n            canCheck: true,\r\n            checked: column.isSorted && !column.isSortedDescending,\r\n            onClick: () => {\r\n                this.onSort(column, false);\r\n                this.onContextualMenuDismissed()\r\n            },\r\n        });\r\n\r\n        menuItems.push({\r\n            key: 'zToA',\r\n            name: \"Sort Z to A\",\r\n            iconProps: { iconName: 'SortDown' },\r\n            canCheck: true,\r\n            checked: column.isSorted && column.isSortedDescending,\r\n            onClick: () => {\r\n                this.onSort(column, true);\r\n                this.onContextualMenuDismissed()\r\n            },\r\n        });\r\n\r\n        return {\r\n            items: menuItems,\r\n            target: ev.currentTarget as HTMLElement,\r\n            directionalHint: DirectionalHint.bottomLeftEdge,\r\n            gapSpace: 10,\r\n            isBeakVisible: false,\r\n            onDismiss: this.onContextualMenuDismissed,\r\n        };\r\n    }\r\n\r\n\r\n\r\n    onContextualMenuDismissed = () => {\r\n        this.setState({ contextualMenuProps: undefined })\r\n    }\r\n\r\n    getSelectionDetail = () => {\r\n        const selected = this._selection.getSelection() as Row[];\r\n        this.setState({ selected: selected?.map(e => e.solutionName) });\r\n    }\r\n\r\n    onFilterChange = (_ev?: React.FormEvent<HTMLElement>, text?: string) => {\r\n        const elems = this.state.allItems;\r\n        Helpers.StringIsNotNullOrEmpty(text) ? this.setState({ rows: elems.filter((item) => this.hasText(item, text as string)) }) : this.setState({ rows: elems });\r\n    }\r\n\r\n    hasText = (item: any, text: string): boolean => {\r\n        const stringed = Object.keys(item).map(prop => item[prop] !== null && item[prop] !== undefined ? item[prop].toString().toLowerCase() : \"\").join('|');\r\n        return stringed.indexOf(text.toLowerCase()) > -1;\r\n    }\r\n\r\n    onSort = (column: IColumn, isDescending: boolean): void => {\r\n        const { columns, rows } = this.state;\r\n        const newColumns: IColumn[] = columns.slice();\r\n        const currColumn = newColumns.find(e => e.key === column.key);\r\n        if (currColumn) {\r\n            newColumns.forEach((newCol: IColumn) => {\r\n                if (newCol === currColumn) {\r\n                    currColumn.isSortedDescending = isDescending;\r\n                    currColumn.isSorted = true;\r\n                } else {\r\n                    newCol.isSorted = false;\r\n                    newCol.isSortedDescending = true;\r\n                }\r\n            });\r\n            // Sort the items.\r\n            const newRows = Helpers.copyAndSort(rows, column.key!, isDescending);\r\n\r\n            // Reset the items and columns to match the state.\r\n            this.setState({\r\n                rows: newRows,\r\n                columns: newColumns\r\n            });\r\n        }\r\n    };\r\n\r\n\r\n    onReloadClick = () => {\r\n        this.setState({ rows: [] });\r\n        this.load();\r\n    };\r\n\r\n    // getStatus(elem: {\r\n    //     version: string;\r\n    //     solutionName: string;\r\n    //     connectionUrl: string;\r\n    //     connectionId: string;\r\n    // }, compareVal?: string, compareId?: string) {\r\n    //     if (compareId && compareVal) {\r\n    //         if (elem.connectionId === compareId) {\r\n    //             return VersionStatus.Default\r\n    //         } else {\r\n    //             const compare = Helpers.compareVer(elem.version, compareVal);\r\n    //             return compare === 0 ? VersionStatus.Equal : (compare === 1 ? VersionStatus.Above : VersionStatus.Under);\r\n    //         }\r\n    //     }\r\n    //     return VersionStatus.Default;\r\n    // }\r\n\r\n    onRenderItemColumn = (item: Row, _index?: number, column?: IColumn): JSX.Element | string | number => {\r\n        let result = \"---\";\r\n        let color = \"\";\r\n        if (column && column.name) {\r\n            const el = (item as any)[column.name] ?? (item as any)[column.key];\r\n            if (el) {\r\n                result = el;\r\n                if (Helpers.isDate(el))\r\n                    result = el.toLocaleString();\r\n            }\r\n        }\r\n        return <Text variant=\"medium\" style={{ color: color }}>{result}</Text>;\r\n    };\r\n\r\n}\r\n\r\nconst onRenderDetailsHeader: IRenderFunction<IDetailsHeaderProps> = (props, defaultRender) => {\r\n    if (!props) {\r\n        return null;\r\n    }\r\n    const onRenderColumnHeaderTooltip: IRenderFunction<IDetailsColumnRenderTooltipProps> = tooltipHostProps => (\r\n        <TooltipHost {...tooltipHostProps} />\r\n    );\r\n    return (\r\n        <Sticky stickyPosition={StickyPositionType.Header} isScrollSynced>\r\n            {defaultRender!({\r\n                ...props,\r\n                onRenderColumnHeaderTooltip,\r\n            })}\r\n        </Sticky>\r\n    );\r\n};","\r\nimport { IRefObject, ISelection } from \"@fluentui/react\";\r\nimport * as React from \"react\";\r\n\r\nexport interface IViewSelection { }\r\n\r\nexport interface IViewSelectionProps\r\n    extends React.HTMLAttributes<HTMLDivElement> {\r\n    componentRef?: IRefObject<IViewSelection>;\r\n\r\n    /**\r\n     * The selection object to interact with when updating selection changes.\r\n     */\r\n    selection: ISelection;\r\n\r\n    items: any[];\r\n}\r\n\r\nexport interface IViewSelectionState { }\r\n\r\nexport class ViewSelection extends React.Component<\r\n    IViewSelectionProps,\r\n    IViewSelectionState\r\n> {\r\n    private items: any[];\r\n    private selectedIndices: any[];\r\n    constructor(props: IViewSelectionProps) {\r\n        super(props);\r\n        this.state = {};\r\n        this.selectedIndices = [];\r\n        this.items = this.props.items;\r\n    }\r\n\r\n    public render() {\r\n        const { children } = this.props;\r\n        return <>{children}</>;\r\n    }\r\n\r\n    public componentWillUpdate(\r\n    ) {\r\n        this.saveSelection();\r\n    }\r\n\r\n    public componentDidUpdate(\r\n    ) {\r\n        this.restoreSelection();\r\n    }\r\n\r\n    private toListIndex(index: number) {\r\n        const viewItems = this.props.selection.getItems();\r\n        const viewItem = viewItems[index];\r\n        return this.items.findIndex(listItem => listItem === viewItem);\r\n      }\r\n    \r\n      private toViewIndex(index: number) {\r\n        const listItem = this.items[index];\r\n        const viewIndex = this.props.selection\r\n          .getItems()\r\n          .findIndex(viewItem => viewItem === listItem);\r\n        return viewIndex;\r\n      }\r\n    \r\n      private saveSelection(): void {\r\n        const newIndices = this.props.selection\r\n          .getSelectedIndices()\r\n          .map(index => this.toListIndex(index))\r\n          .filter(index => this.selectedIndices.indexOf(index) === -1);\r\n    \r\n        const unselectedIndices = this.props.selection\r\n          .getItems()\r\n          .map((_item, index) => index)\r\n          .filter(index => this.props.selection.isIndexSelected(index) === false)\r\n          .map(index => this.toListIndex(index));\r\n    \r\n        this.selectedIndices = this.selectedIndices.filter(\r\n          index => unselectedIndices.indexOf(index) === -1\r\n        );\r\n        this.selectedIndices = [...this.selectedIndices, ...newIndices];\r\n      }\r\n    \r\n      private restoreSelection(): void {\r\n        const indices = this.selectedIndices\r\n          .map(index => this.toViewIndex(index as any))\r\n          .filter(index => index !== -1);\r\n        for (const index of indices) {\r\n          this.props.selection.setIndexSelected(index, true, false);\r\n        }\r\n      }\r\n}\r\n","import { Guid } from \"./Model\";\r\n\r\nexport class Helpers {\r\n    public static StringIsNotNullOrEmpty(param?: string | Guid) {\r\n        return param !== undefined && param !== null && param !== '';\r\n    }\r\n    public static GetUUID = (): string => {\r\n        return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\r\n    }\r\n    public static isNumeric(str: any) {\r\n        if (typeof str != \"string\") return false // we only process strings!  \r\n        return !isNaN(+str) && // use type coercion to parse the _entirety_ of the string (`parseFloat` alone does not do this)...\r\n            !isNaN(parseFloat(str)) // ...and ensure strings of whitespace fail\r\n    }\r\n    public static isDate(date: any): date is Date {\r\n        return date instanceof Date && JSON.stringify(date) !== 'null' && !isNaN(date.valueOf());\r\n    }\r\n\r\n    /**\r\n   * @description\r\n   * Takes an Array<V>, and a grouping function,\r\n   * and returns a Map of the array grouped by the grouping function.\r\n   *\r\n   * @param list An array of type V.\r\n   * @param keyGetter A Function that takes the the Array type V as an input, and returns a value of type K.\r\n   *                  K is generally intended to be a property key of V.\r\n   *\r\n   * @returns Map of the array grouped by the grouping function.\r\n   */\r\n    public static groupBy<K, V>(list: Array<V>, keyGetter: (input: V) => K): Map<K, Array<V>> {\r\n        const map = new Map<K, Array<V>>();\r\n        list.forEach((item) => {\r\n            const key = keyGetter(item);\r\n            const collection = map.get(key);\r\n            if (!collection) {\r\n                map.set(key, [item]);\r\n            } else {\r\n                collection.push(item);\r\n            }\r\n        });\r\n        return map;\r\n    }\r\n\r\n    static copyAndSort<T>(items: T[], columnKey: string, isSortedDescending?: boolean) {\r\n        const key = columnKey as keyof T;\r\n        return items.slice(0).sort((a: T, b: T) => {\r\n            let toSortA: any;\r\n            let toSortB: any;\r\n            if (Helpers.isDate(a[key])) {\r\n                toSortA = (a[key] as any).getTime();\r\n                toSortB = (b[key] as any).getTime();\r\n            } else {\r\n                toSortA = a[key];\r\n                toSortB = b[key];\r\n            }\r\n            return ((isSortedDescending ? toSortA < toSortB : toSortA > toSortB) ? 1 : -1)\r\n        });\r\n    }\r\n\r\n\r\n    static objectsEqual = (o1: any, o2: any): boolean =>\r\n        typeof o1 === 'object' && Object.keys(o1).length > 0\r\n            ? Object.keys(o1).length === Object.keys(o2).length\r\n            && Object.keys(o1).every(p => Helpers.objectsEqual(o1[p], o2[p]))\r\n            : o1 === o2;\r\n\r\n    static arraysEqual = (a1: any[], a2: any[]) =>\r\n        a1.length === a2.length && a1.every((o, idx) => Helpers.objectsEqual(o, a2[idx]));\r\n\r\n    static compareVer(a: any, b: any) {\r\n        function prep(t: any) {\r\n            return (\"\" + t)\r\n                //treat non-numerical characters as lower version\r\n                //replacing them with a negative number based on charcode of first character\r\n                .replace(/[^0-9\\.]+/g, function (c) { return \".\" + ((c = c.replace(/[\\W_]+/, \"\")) ? c.toLowerCase().charCodeAt(0) - 65536 : \"\") + \".\" })\r\n                //remove trailing \".\" and \"0\" if followed by non-numerical characters (1.0.0b);\r\n                .replace(/(?:\\.0+)*(\\.-[0-9]+)(\\.[0-9]+)?\\.*$/g, \"$1$2\")\r\n                .split('.');\r\n        }\r\n        a = prep(a);\r\n        b = prep(b);\r\n        for (var i = 0; i < Math.max(a.length, b.length); i++) {\r\n            //convert to integer the most efficient way\r\n            a[i] = ~~a[i];\r\n            b[i] = ~~b[i];\r\n            if (a[i] > b[i])\r\n                return 1;\r\n            else if (a[i] < b[i])\r\n                return -1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    static trimCurlyBraces(str: string) {\r\n        return str.replace(/^\\{|\\}$/g, \"\");\r\n    }\r\n\r\n}","import XLSX from 'xlsx';\r\n\r\nexport class ListHelpers {\r\n    static prepareDataForExport(firstRowStatic: { key: string, label: string }[], colNames: string[], items: any[], transformElement?: (item: any) => any) {\r\n        const firstFinished = firstRowStatic.map(e => e.label).concat(colNames);\r\n        const metadata = firstRowStatic.map(e => e.key);\r\n        const data: any[][] = [firstFinished];\r\n        const rowsData = items.map(e => {\r\n            const roRet: any[] = [];\r\n            Object.keys(e).filter(a => metadata.some(meta => meta === a)).forEach(a => {\r\n                const el = e[a as any];\r\n                let toRet = '---';\r\n                if (el) {\r\n                    toRet = el as any;\r\n                }\r\n                roRet.push(toRet);\r\n            });\r\n            colNames.forEach(name => {\r\n                const el = e[name as any];\r\n                if (transformElement) {\r\n                    roRet.push(transformElement(el));\r\n                } else {\r\n                    let toPut: any = '---';\r\n                    if (el && typeof (el) === \"object\") {\r\n                        toPut = true;\r\n                    }\r\n                    roRet.push(toPut);\r\n                }\r\n            });\r\n\r\n            return roRet;\r\n        });\r\n        const completeData = data.concat(rowsData);\r\n        return completeData;\r\n    }\r\n\r\n    static exportList(firstRowStatic: { key: string, label: string }[], colNames: string[], items: any[], props: { Title?: string, Subject?: string, CreatedDate?: Date }, fileName: string, transformElement?: (item: any) => any) {\r\n        const completeData = ListHelpers.prepareDataForExport(firstRowStatic, colNames, items, transformElement);\r\n\r\n        const ws = XLSX.utils.aoa_to_sheet(completeData);\r\n        const wb = XLSX.utils.book_new();\r\n        const fullProps = { ...props, Author: \"AlabDiffTool\" };\r\n        wb.Props = fullProps;\r\n        XLSX.utils.book_append_sheet(wb, ws);\r\n        /* generate XLSX file and send to client */\r\n        XLSX.writeFile(wb, fileName + \".xlsx\")\r\n    }\r\n}","import { StorageObj } from \"./Model\";\r\n\r\nexport class LSHelper {\r\n\r\n    /**\r\n    * @param ttl optional, millisecond before the value becomes invalid. Default: no invalidation\r\n    */\r\n    static setWithExpiry(key: string, value: any, ttl?: number) {\r\n        const now = new Date()\r\n\r\n        // `item` is an object which contains the original value\r\n        // as well as the time when it's supposed to expire\r\n        const item: StorageObj = {\r\n            v: value,\r\n        }\r\n        if (ttl) {\r\n            item['e'] = now.getTime() + ttl;\r\n        }\r\n        localStorage.setItem(key, JSON.stringify(item));\r\n    }\r\n\r\n    static getWithExpiry(key: string) {\r\n        const itemStr = localStorage.getItem(key)\r\n\r\n        // if the item doesn't exist, return null\r\n        if (!itemStr) {\r\n            return null\r\n        }\r\n\r\n        const item = JSON.parse(itemStr) as StorageObj;\r\n        if (item.e) {\r\n            const now = new Date();\r\n            // compare the expiry time of the item with the current time\r\n            if (now.getTime() > item.e) {\r\n                // If the item is expired, delete the item from storage\r\n                // and return null\r\n                localStorage.removeItem(key);\r\n                return null;\r\n            }\r\n        }\r\n        return item.v;\r\n    }\r\n\r\n    static Set(key: string, value: any) {\r\n        localStorage.setItem(key, value);\r\n    }\r\n\r\n    static Get(key: string) {\r\n        return localStorage.getItem(key);\r\n    }\r\n\r\n    static GetKeys() {\r\n        const keys: string[] = [];\r\n        for (let i = 0; i < localStorage.length; ++i) {\r\n            const key = localStorage.key(i);\r\n            if (key)\r\n                keys.push(key);\r\n        }\r\n        return keys;\r\n    }\r\n\r\n\r\n    /**\r\n    * This functions dumps all keys and values of the local Storage to the console,\r\n    * as well as the current size and number of items\r\n    * @param fShowMaximumSize optional, flag show maximum size of localStorage. Default: false\r\n    */\r\n    static consoleInfo(fShowMaximumSize?: boolean) {\r\n        if (fShowMaximumSize === void 0) { fShowMaximumSize = false; }\r\n        var amount = 0;\r\n        var size = 0;\r\n        for (var i = 0; i < localStorage.length; ++i) {\r\n            var key = localStorage.key(i)\r\n            if (key) {\r\n                var value = localStorage.getItem(key);\r\n                console.log(amount, key, value);\r\n                if (value) {\r\n                    size += key.length + value.length;\r\n                    amount++;\r\n                }\r\n            }\r\n        }\r\n        console.log(\"Total entries:\", amount);\r\n        console.log(\"Total size:\", size);\r\n        if (fShowMaximumSize === true) {\r\n            var maxSize = LSHelper.getMaximumSize();\r\n            console.log(\"Total size:\", maxSize);\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Empties the list associated with the object of all key/value pairs, if there are any.\r\n    */\r\n    static clear() {\r\n        localStorage.clear();\r\n    }\r\n\r\n    /**\r\n    * Check if localStorage has an Item / exists with the give key\r\n    * @param key the key of the Item\r\n    */\r\n    static hasItem(key: string) {\r\n        return localStorage.getItem(key) !== null;\r\n    }\r\n\r\n    /**\r\n    * This will return the left space in localStorage without affecting it's content\r\n    * Might be slow !!!\r\n    */\r\n    static getRemainingSpace() {\r\n        var itemBackup = localStorage.getItem(\"\");\r\n        var increase = true;\r\n        var data = \"1\";\r\n        var totalData = \"\";\r\n        var trytotalData = \"\";\r\n        while (true) {\r\n            try {\r\n                trytotalData = totalData + data;\r\n                localStorage.setItem(\"\", trytotalData);\r\n                totalData = trytotalData;\r\n                if (increase)\r\n                    data += data;\r\n            }\r\n            catch (e) {\r\n                if (data.length < 2) {\r\n                    break;\r\n                }\r\n                increase = false;\r\n                data = data.substr(data.length / 2);\r\n            }\r\n        }\r\n        if (itemBackup === null)\r\n            localStorage.removeItem(\"\");\r\n        else\r\n            localStorage.setItem(\"\", itemBackup);\r\n        return totalData.length;\r\n    }\r\n\r\n\r\n    /**\r\n    * Flag set true if the Browser supports localStorage, without affecting it\r\n    */\r\n    static isSupported = () => {\r\n        try {\r\n            var itemBackup = localStorage.getItem(\"\");\r\n            if (itemBackup) {\r\n                localStorage.removeItem(\"\");\r\n                localStorage.setItem(\"\", itemBackup);\r\n                if (itemBackup === null)\r\n                    localStorage.removeItem(\"\");\r\n                else\r\n                    localStorage.setItem(\"\", itemBackup);\r\n            }\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    };\r\n\r\n    /**\r\n * This function returns the maximum size of localStorage without affecting it's content\r\n */\r\n    static getMaximumSize() {\r\n        var backup = LSHelper.getBackup();\r\n        localStorage.clear()\r\n        var max = LSHelper.getRemainingSpace();\r\n        LSHelper.applyBackup(backup);\r\n        return max;\r\n    }\r\n\r\n    /**\r\n     * This will return the currently used size of localStorage\r\n     */\r\n    static getUsedSize() {\r\n        var sum = 0;\r\n        for (var i = 0; i < localStorage.length; ++i) {\r\n            var key = localStorage.key(i)\r\n            if (key) {\r\n                var value = localStorage.getItem(key);\r\n                if (value) {\r\n                    sum += key.length + value.length;\r\n                }\r\n            }\r\n        }\r\n        return sum;\r\n    }\r\n    /**\r\n     * This will return the currently used size of a given Item,returns NaN if key is not found\r\n     * @param key\r\n     */\r\n    static getItemUsedSpace(key: string) {\r\n        var value = localStorage.getItem(key);\r\n        if (value === null) {\r\n            return NaN;\r\n        }\r\n        else {\r\n            return key.length + value.length;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This will return a localStorage-backup (Associative-Array key->value)\r\n     */\r\n    static getBackup() {\r\n        let backup: { [key: string]: string } = {};\r\n        for (var i = 0; i < localStorage.length; ++i) {\r\n            var key = localStorage.key(i);\r\n            if (key) {\r\n                var value = localStorage.getItem(key);\r\n                if (value) {\r\n                    backup[key] = value;\r\n                }\r\n            }\r\n        }\r\n        return backup;\r\n    }\r\n    /**\r\n     * This will apply a localStorage-Backup (Associative-Array key->value)\r\n     * @param backup            associative-array \r\n     * @param fClear             optional flag to clear all existing storage first.Default:true\r\n     * @param fOverwriteExisting optional flag to replace existing keys. Default: true\r\n     */\r\n    static applyBackup(backup: { [key: string]: string }, fClear?: boolean, fOverwriteExisting?: boolean) {\r\n        if (fClear === void 0) { fClear = true; }\r\n        if (fOverwriteExisting === void 0) { fOverwriteExisting = true; }\r\n        if (fClear == true) {\r\n            localStorage.clear();\r\n        }\r\n        for (var key in backup) {\r\n            if (fOverwriteExisting === false && backup[key] !== undefined) {\r\n                continue;\r\n            }\r\n            var value = backup[key];\r\n            localStorage.setItem(key, value);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n    * @description\r\n    * Takes an Array<V>, and a property getter function,\r\n    * and returns the closest value V.\r\n    */\r\n    static findClosest<V>(counts: Array<V>, goal: number, elementGetter: (input: V) => number) {\r\n        return counts.reduce((prev, curr) => Math.abs(elementGetter(curr) - goal) < Math.abs(elementGetter(prev) - goal) ? curr : prev);\r\n    }\r\n\r\n    /**\r\n    * @description\r\n    * Takes the number of elements to do the percentage,\r\n    * and returns percentage that each element has.\r\n    */\r\n    static getPercentage(itemsNumber: number) {\r\n        return ((100 / itemsNumber));\r\n    }\r\n\r\n\r\n    /**\r\n    * @description\r\n    * Takes an Array<V>, and a property getter function,\r\n    * and returns the sum of all the elements of the array.\r\n    */\r\n    static getSum<V>(counts: Array<V>, elementGetter: (input: V) => number) {\r\n        return counts.reduce((a, b) => a + elementGetter(b), 0)\r\n    }\r\n}","import { Helpers } from \"./Helpers\";\r\n\r\nexport interface XrmConnectionString {\r\n    OrganizationUrl: string;\r\n    ClientId: string;\r\n    Secret: string;\r\n    Save: boolean;\r\n    IpAddress: string;\r\n    Name: string;\r\n    Id: string;\r\n}\r\n\r\nexport interface XrmConnectionStringExp extends XrmConnectionString {\r\n    isEditMode: boolean;\r\n    onEdit: Function;\r\n    onSave: Function;\r\n    isSelected: boolean;\r\n    onSelect: Function;\r\n    onDelete: Function;\r\n}\r\n\r\nexport interface StorageObj {\r\n    v: any;\r\n    e?: number;\r\n}\r\n\r\nexport interface SolutionsForConnectionString {\r\n    Solutions: Solution[];\r\n    ConnectionStringId: string;\r\n    Url: string;\r\n}\r\n\r\nexport interface ConnectionStringRequest {\r\n    Url: string;\r\n    Client: string;\r\n    Secret: string;\r\n    Id: string;\r\n}\r\n\r\nexport enum VersionStatus {\r\n    Above = 1,\r\n    Equal = 2,\r\n    Under = 3,\r\n    Default = 0\r\n}\r\n\r\nexport interface Solution {\r\n    UniqueName: string;\r\n    Version: string;\r\n    VersionNumber: string;\r\n    CreatedOn: Date;\r\n    ModifiedOn: Date;\r\n    IsManaged: boolean;\r\n}\r\n\r\nexport interface SolutionDetail {\r\n    LogicalName: string;\r\n    Version: string;\r\n    ModifiedOn: Date;\r\n    DisplayName: string;\r\n    EntityReference: string;\r\n}\r\n\r\nexport interface SolutionDetailsForConnectionString {\r\n    SolutionDetails: SolutionDetail[];\r\n    ConnectionStringId: string;\r\n    Url: string;\r\n}\r\n\r\nexport interface SolutionDetailsForConnectionStringRequest {\r\n    ConnectionStrings: ConnectionStringRequest[],\r\n    Name: string\r\n}\r\n\r\nexport interface SolutionsDetailsRequest {\r\n    ConnectionString: ConnectionStringRequest,\r\n    Names: string[]\r\n}\r\n\r\nexport interface ElementDetailsForSolution {\r\n    SolutionName: string;\r\n    SolutionDetails: SolutionDetail[];\r\n}\r\n\r\nexport class Guid extends String {\r\n\r\n    constructor(x = '') {\r\n        super(x)\r\n    }\r\n    public static Empty: string = '00000000-0000-0000-0000-000000000000';\r\n\r\n    public static Equals(first: string, second: string): boolean {\r\n        return Guid.format(first) === Guid.format(second);\r\n    }\r\n\r\n    public static format(value: string): string {\r\n        if (value === '')\r\n            return value;\r\n        return '{' + Helpers.trimCurlyBraces(value).toLowerCase() + '}';\r\n    }\r\n\r\n    public static newGuid() {\r\n        var newGuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n            var r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\r\n            return v.toString(16);\r\n        });\r\n        return Guid.format(newGuid);\r\n    };\r\n\r\n    public static IsNullOrEmpty(value: string | Guid) {\r\n        return !Helpers.StringIsNotNullOrEmpty(value) || value === Guid.Empty;\r\n    }\r\n}","import { Stack, Text } from \"@fluentui/react\";\r\nimport React from \"react\";\r\n\r\nconst Home = () => {\r\n    return (\r\n        <Stack tokens={{ childrenGap: 10 }}>\r\n            <Stack horizontal horizontalAlign=\"center\" tokens={{ padding: 40 }}>\r\n                <Text variant=\"xxLarge\">Super Mega XRM TDS Dataverse Tool</Text>\r\n            </Stack>\r\n            <Stack horizontal horizontalAlign=\"center\" tokens={{ padding: 40 }}>\r\n                <Text variant=\"medium\">Solution comparison between organization, object publisher, solution exporter and much more! (Maybe)</Text>\r\n            </Stack>\r\n        </Stack>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from \"react\"\r\nimport ConnectionStringManager from \"../../Components/ConnectionStringManager/ConnectionStringManager\"\r\nimport { SolutionList } from \"../../Components/SolutionList/SolutionList\"\r\n\r\nconst MultiConnectionPage = () => {\r\n    return <ConnectionStringManager {...{ SelectionMode: \"multiple\" }}>\r\n        <SolutionList connectionStrings={[]} />\r\n    </ConnectionStringManager>\r\n}\r\n\r\nexport default MultiConnectionPage","import React from \"react\"\r\nimport ConnectionStringManager from \"../../Components/ConnectionStringManager/ConnectionStringManager\"\r\nimport { SolutionPicker } from \"../../Components/SolutionPicker/SolutionPicker\"\r\n\r\nconst SingleConnectionPage = () => {\r\n    return <ConnectionStringManager {...{ SelectionMode: \"single\" }}>\r\n        <SolutionPicker connectionStrings={[]} />\r\n    </ConnectionStringManager>\r\n}\r\n\r\nexport default SingleConnectionPage","import * as React from \"react\";\r\nimport * as ReactDOM from 'react-dom';\r\nimport { FontWeights, getTheme, INavLink, INavLinkGroup, INavStyles, initializeIcons, mergeStyleSets, Modal, Nav, Stack } from '@fluentui/react';\r\nimport { Collapser } from \"./Components/Collapser\";\r\nimport { Route, BrowserRouter as Router, Switch, useHistory } from \"react-router-dom\";\r\nimport Waiter from \"./Components/LoadingAnimation\";\r\nimport Home from \"./Pages/Home/Home\";\r\nimport MultiConnectionPage from \"./Pages/MultiConnection/MultiConnection\";\r\nimport SingleConnectionPage from \"./Pages/SingleConnection/SingleConnectionViewer\";\r\n// import Index from \"./Pages/Xls/Exporter\";\r\n\r\ninterface IApp {\r\n    InError: boolean;\r\n    Error?: Error;\r\n    ErrorInfo?: React.ErrorInfo;\r\n}\r\ninitializeIcons();\r\nconst theme = getTheme();\r\nexport const modalStyles = mergeStyleSets({\r\n    container: {\r\n        display: 'flex',\r\n        flexFlow: 'column nowrap',\r\n        alignItems: 'stretch',\r\n        width: '70%'\r\n    },\r\n    header: [\r\n        theme.fonts.xLargePlus,\r\n        {\r\n            flex: '1 1 auto',\r\n            borderTop: `4px solid ${theme.palette.themePrimary}`,\r\n            color: theme.palette.neutralPrimary,\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            fontWeight: FontWeights.semibold,\r\n            padding: '12px 12px 14px 24px',\r\n        },\r\n    ],\r\n    body: {\r\n        flex: '4 4 auto',\r\n        padding: '0 24px 24px 24px',\r\n        overflowY: 'hidden',\r\n        selectors: {\r\n            p: { margin: '14px 0' },\r\n            'p:first-child': { marginTop: 0 },\r\n            'p:last-child': { marginBottom: 0 },\r\n        },\r\n    },\r\n});\r\n\r\n// const HomePage = React.lazy(() => import('./Pages/Home/Home'));\r\n// const MultiConnections = React.lazy(() => import('./Pages/MultiConnection/MultiConnection'));\r\n// const SingleConnections = React.lazy(() => import('./Pages/SingleConnection/SingleConnectionViewer'));\r\n\r\nconst navLinkGroups: INavLinkGroup[] = [\r\n    {\r\n        name: 'Pages',\r\n        expandAriaLabel: 'Expand Basic components section',\r\n        collapseAriaLabel: 'Collapse Basic components section',\r\n        links: [\r\n            {\r\n                key: 'Home',\r\n                name: 'Home',\r\n                url: '/',\r\n            },\r\n            {\r\n                key: 'Multi',\r\n                name: 'Multi connections',\r\n                url: '/multi',\r\n            },\r\n            {\r\n                key: 'Single',\r\n                name: 'Single connection',\r\n                url: '/single',\r\n            },\r\n            // {\r\n            //     key: 'xlsx',\r\n            //     name: 'Sheet Js',\r\n            //     url: '/xlsx',\r\n            // },\r\n        ],\r\n    }\r\n];\r\n\r\nconst navStyles: Partial<INavStyles> = { root: { width: 300 } };\r\n\r\nconst NavApp = () => {\r\n    let history = useHistory();\r\n    const onCLick = (ev?: React.MouseEvent<HTMLElement, MouseEvent> | undefined, item?: INavLink | undefined) => {\r\n        if (ev && item) {\r\n            ev.preventDefault()\r\n            history.push(item.url)\r\n        }\r\n    }\r\n    return (\r\n        <Nav styles={navStyles} groups={navLinkGroups} onLinkClick={onCLick} />\r\n    );\r\n};\r\n\r\nclass App extends React.Component<{}, IApp> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            InError: false\r\n        };\r\n    }\r\n\r\n    public render() {\r\n        if (!this.state.InError) {\r\n            return (\r\n                <React.Suspense fallback={<Waiter />}>\r\n                    <Router>\r\n                        <Stack horizontal style={{ width: '100%' }}>\r\n                            <NavApp />\r\n                            <Switch>\r\n                                <Route exact path=\"/\" component={() => <Home />} />\r\n                                <Route path=\"/multi\" component={() => <MultiConnectionPage />} />\r\n                                <Route path=\"/single\" component={() => <SingleConnectionPage />} />\r\n                                {/* <Route path=\"/xlsx\" component={() => <Index />} /> */}\r\n                                {/* <Route exact path=\"/\" render={() => <HomePage />} />\r\n                                <Route path=\"/multi\" render={() => <MultiConnections />} />\r\n                                <Route exact path=\"/single\" render={() => <SingleConnections />} /> */}\r\n                            </Switch>\r\n                        </Stack>\r\n                    </Router>\r\n                </React.Suspense >\r\n            );\r\n        }\r\n        return (\r\n            <div>\r\n                <Modal\r\n                    isOpen={this.state.InError}\r\n                    isBlocking={true}\r\n                    containerClassName={modalStyles.container}\r\n                >\r\n                    <div className={modalStyles.header}>\r\n                        <span>Errore</span>\r\n                    </div>\r\n                    <div className={modalStyles.body}>\r\n                        <Collapser label=\"dettagli errore\" children={<> <p>{this.state.Error?.message}</p>\r\n                            <p>{this.state.ErrorInfo?.componentStack}</p></>} />\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    public componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\r\n        this.setState({\r\n            InError: true,\r\n            Error: error,\r\n            ErrorInfo: errorInfo\r\n        });\r\n    }\r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));","/* (ignored) */","/* (ignored) */","/* (ignored) */","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"main\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkdiff_front_end\"] = self[\"webpackChunkdiff_front_end\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"reactvendor\",\"xlsxvendor\",\"vendors-node_modules_fluentui_font-icons-mdl2_lib_index_js-node_modules_fluentui_react_lib_co-acd040\"], () => (__webpack_require__(\"./app.tsx\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":[],"sourceRoot":""}